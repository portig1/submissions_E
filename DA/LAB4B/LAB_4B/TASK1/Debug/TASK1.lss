
TASK1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000bfe  00000c72  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bfe  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000c78  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cd4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000d14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012fa  00000000  00000000  00000d54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009d5  00000000  00000000  0000204e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000076f  00000000  00000000  00002a23  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00003194  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000535  00000000  00000000  00003214  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000134  00000000  00000000  00003749  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000387d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee ef       	ldi	r30, 0xFE	; 254
  c8:	fb e0       	ldi	r31, 0x0B	; 11
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a6 30       	cpi	r26, 0x06	; 6
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a6 e0       	ldi	r26, 0x06	; 6
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a6 30       	cpi	r26, 0x06	; 6
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 be 00 	call	0x17c	; 0x17c <main>
  ea:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <usart_init>:



void usart_init (void)
{
	UBRR0H = (uint8_t)(BAUD_PRESCALLER >> 8);
  f2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
  f6:	87 e6       	ldi	r24, 0x67	; 103
  f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  fc:	88 e1       	ldi	r24, 0x18	; 24
  fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (3 << UCSZ00);
 102:	86 e0       	ldi	r24, 0x06	; 6
 104:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 108:	08 95       	ret

0000010a <USART_send>:
}


void USART_send( unsigned char data) {

	while (!(UCSR0A & (1 << UDRE0))); //wait until UDR0 is empty
 10a:	e0 ec       	ldi	r30, 0xC0	; 192
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	90 81       	ld	r25, Z
 110:	95 ff       	sbrs	r25, 5
 112:	fd cf       	rjmp	.-6      	; 0x10e <USART_send+0x4>
	UDR0 = data;					 //transmit ch
 114:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 118:	08 95       	ret

0000011a <USART_putstring>:

}

void USART_putstring(char* StringPtr) {
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	ec 01       	movw	r28, r24

	while (*StringPtr != 0x00) {
 120:	88 81       	ld	r24, Y
 122:	88 23       	and	r24, r24
 124:	31 f0       	breq	.+12     	; 0x132 <USART_putstring+0x18>
 126:	21 96       	adiw	r28, 0x01	; 1
		USART_send(*StringPtr);
 128:	0e 94 85 00 	call	0x10a	; 0x10a <USART_send>

}

void USART_putstring(char* StringPtr) {

	while (*StringPtr != 0x00) {
 12c:	89 91       	ld	r24, Y+
 12e:	81 11       	cpse	r24, r1
 130:	fb cf       	rjmp	.-10     	; 0x128 <USART_putstring+0xe>
		USART_send(*StringPtr);
		StringPtr++;
	}

}
 132:	df 91       	pop	r29
 134:	cf 91       	pop	r28
 136:	08 95       	ret

00000138 <stepperDelay>:

void stepperDelay(int delayInMilliseconds) 
{
	TCNT1 = 0;
 138:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 13c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	OCR1A = (((F_CPU/64)/1000)*delayInMilliseconds)-1;
 140:	2a ef       	ldi	r18, 0xFA	; 250
 142:	ac 01       	movw	r20, r24
 144:	24 9f       	mul	r18, r20
 146:	c0 01       	movw	r24, r0
 148:	25 9f       	mul	r18, r21
 14a:	90 0d       	add	r25, r0
 14c:	11 24       	eor	r1, r1
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 154:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TCCR1B = (1 << WGM12) | (1 << CS11) | (1 << CS10); //CTC mode, CLK/64 for maximum delay of ~260ms
 158:	8b e0       	ldi	r24, 0x0B	; 11
 15a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	while(TCNT1 < OCR1A); //Wait until TCNT is equal to OCR1A
 15e:	a4 e8       	ldi	r26, 0x84	; 132
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	e8 e8       	ldi	r30, 0x88	; 136
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	2d 91       	ld	r18, X+
 168:	3c 91       	ld	r19, X
 16a:	11 97       	sbiw	r26, 0x01	; 1
 16c:	80 81       	ld	r24, Z
 16e:	91 81       	ldd	r25, Z+1	; 0x01
 170:	28 17       	cp	r18, r24
 172:	39 07       	cpc	r19, r25
 174:	c0 f3       	brcs	.-16     	; 0x166 <stepperDelay+0x2e>
	TCCR1B = 0; //Stop timer
 176:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 17a:	08 95       	ret

0000017c <main>:
void USART_putstring(char* StringPtr);

int psuedoFallingEdgeDetector = 0; //Will be used so that only on the falling edge of the pin change process will the MTR _Status be toggled

int main (void)
{
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	cd b7       	in	r28, 0x3d	; 61
 182:	de b7       	in	r29, 0x3e	; 62
 184:	64 97       	sbiw	r28, 0x14	; 20
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	f8 94       	cli
 18a:	de bf       	out	0x3e, r29	; 62
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF;
 190:	8f ef       	ldi	r24, 0xFF	; 255
 192:	84 b9       	out	0x04, r24	; 4
	usart_init ();
 194:	0e 94 79 00 	call	0xf2	; 0xf2 <usart_init>

	
	/** Setup and enable ADC **/
	ADMUX = (0<<REFS1)|    // Reference Selection Bits
 198:	80 e4       	ldi	r24, 0x40	; 64
 19a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(0<<ADLAR)|    // ADC Left Adjust Result
	(0<<MUX2)|     // Analog Channel Selection Bits
	(0<<MUX1)|     // ADC0 (PC0) Potentionmeter
	(0<<MUX0);
	
	ADCSRA = (1<<ADEN)|    // ADC Enable
 19e:	85 e8       	ldi	r24, 0x85	; 133
 1a0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	int delay10 = 200;
	
	while (1)
	{
		
		ADCSRA|=(1<<ADSC);	//start conversion
 1a4:	0a e7       	ldi	r16, 0x7A	; 122
 1a6:	10 e0       	ldi	r17, 0x00	; 0
		while((ADCSRA&(1<<ADIF))==0);//wait for conversion to finish
		
		ADCSRA |= (1<<ADIF);
		
		int tempC = ADCL;
 1a8:	0f 2e       	mov	r0, r31
 1aa:	f8 e7       	ldi	r31, 0x78	; 120
 1ac:	8f 2e       	mov	r8, r31
 1ae:	91 2c       	mov	r9, r1
 1b0:	f0 2d       	mov	r31, r0
		tempC = tempC | (ADCH<<8);
 1b2:	0f 2e       	mov	r0, r31
 1b4:	f9 e7       	ldi	r31, 0x79	; 121
 1b6:	6f 2e       	mov	r6, r31
 1b8:	71 2c       	mov	r7, r1
 1ba:	f0 2d       	mov	r31, r0
		
		char output[20];
		snprintf(output, sizeof(output), "%d\r\n", tempC); //prints out potentiometer value to serial terminal
 1bc:	0f 2e       	mov	r0, r31
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	af 2e       	mov	r10, r31
 1c2:	f1 e0       	ldi	r31, 0x01	; 1
 1c4:	bf 2e       	mov	r11, r31
 1c6:	f0 2d       	mov	r31, r0
 1c8:	0f 2e       	mov	r0, r31
 1ca:	f4 e1       	ldi	r31, 0x14	; 20
 1cc:	5f 2e       	mov	r5, r31
 1ce:	f0 2d       	mov	r31, r0
 1d0:	ce 01       	movw	r24, r28
 1d2:	01 96       	adiw	r24, 0x01	; 1
 1d4:	6c 01       	movw	r12, r24
			PORTB=0x01;
			stepperDelay(delay9);
		}
		else
		{
			PORTB=0x09;
 1d6:	0f 2e       	mov	r0, r31
 1d8:	f9 e0       	ldi	r31, 0x09	; 9
 1da:	2f 2e       	mov	r2, r31
 1dc:	f0 2d       	mov	r31, r0
			stepperDelay(delay10);
			PORTB=0x08;
 1de:	68 94       	set
 1e0:	33 24       	eor	r3, r3
 1e2:	33 f8       	bld	r3, 3
			stepperDelay(delay10);
			PORTB=0x0C;
 1e4:	0f 2e       	mov	r0, r31
 1e6:	fc e0       	ldi	r31, 0x0C	; 12
 1e8:	4f 2e       	mov	r4, r31
 1ea:	f0 2d       	mov	r31, r0
	int delay10 = 200;
	
	while (1)
	{
		
		ADCSRA|=(1<<ADSC);	//start conversion
 1ec:	f8 01       	movw	r30, r16
 1ee:	80 81       	ld	r24, Z
 1f0:	80 64       	ori	r24, 0x40	; 64
 1f2:	80 83       	st	Z, r24
		while((ADCSRA&(1<<ADIF))==0);//wait for conversion to finish
 1f4:	f8 01       	movw	r30, r16
 1f6:	80 81       	ld	r24, Z
 1f8:	84 ff       	sbrs	r24, 4
 1fa:	fc cf       	rjmp	.-8      	; 0x1f4 <main+0x78>
		
		ADCSRA |= (1<<ADIF);
 1fc:	80 81       	ld	r24, Z
 1fe:	80 61       	ori	r24, 0x10	; 16
 200:	80 83       	st	Z, r24
		
		int tempC = ADCL;
 202:	f4 01       	movw	r30, r8
 204:	e0 80       	ld	r14, Z
		tempC = tempC | (ADCH<<8);
 206:	f3 01       	movw	r30, r6
 208:	80 81       	ld	r24, Z
 20a:	f1 2c       	mov	r15, r1
 20c:	f8 2a       	or	r15, r24
		
		char output[20];
		snprintf(output, sizeof(output), "%d\r\n", tempC); //prints out potentiometer value to serial terminal
 20e:	ff 92       	push	r15
 210:	ef 92       	push	r14
 212:	bf 92       	push	r11
 214:	af 92       	push	r10
 216:	1f 92       	push	r1
 218:	5f 92       	push	r5
 21a:	df 92       	push	r13
 21c:	cf 92       	push	r12
 21e:	0e 94 05 03 	call	0x60a	; 0x60a <snprintf>
		USART_putstring(output);
 222:	c6 01       	movw	r24, r12
 224:	0e 94 8d 00 	call	0x11a	; 0x11a <USART_putstring>

		//When the ADC value from the potentiometer is below 10, a duty cycle of 0% will be output. Then above 10 and below 20, a duty cycle of 10%. This goes on until the value is above
		//90 for which only a 95% duty cycle will be produced
		if((0 <= tempC) & (tempC < 10))
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61
 232:	9a e0       	ldi	r25, 0x0A	; 10
 234:	e9 16       	cp	r14, r25
 236:	f1 04       	cpc	r15, r1
 238:	70 f5       	brcc	.+92     	; 0x296 <main+0x11a>
		{
			PORTB=0x09;
 23a:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay1);
 23c:	84 e1       	ldi	r24, 0x14	; 20
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 244:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay1);
 246:	84 e1       	ldi	r24, 0x14	; 20
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 24e:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay1);
 250:	84 e1       	ldi	r24, 0x14	; 20
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 258:	e4 e0       	ldi	r30, 0x04	; 4
 25a:	e5 b9       	out	0x05, r30	; 5
			stepperDelay(delay1);
 25c:	84 e1       	ldi	r24, 0x14	; 20
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 264:	f6 e0       	ldi	r31, 0x06	; 6
 266:	f5 b9       	out	0x05, r31	; 5
			stepperDelay(delay1);
 268:	84 e1       	ldi	r24, 0x14	; 20
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 270:	82 e0       	ldi	r24, 0x02	; 2
 272:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay1);
 274:	84 e1       	ldi	r24, 0x14	; 20
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 27c:	83 e0       	ldi	r24, 0x03	; 3
 27e:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay1);
 280:	84 e1       	ldi	r24, 0x14	; 20
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay1);
 28c:	84 e1       	ldi	r24, 0x14	; 20
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 294:	ab cf       	rjmp	.-170    	; 0x1ec <main+0x70>
		}
		else if((10 <= tempC) & (tempC < 20))
 296:	c7 01       	movw	r24, r14
 298:	0a 97       	sbiw	r24, 0x0a	; 10
 29a:	0a 97       	sbiw	r24, 0x0a	; 10
 29c:	70 f5       	brcc	.+92     	; 0x2fa <main+0x17e>
		{
			PORTB=0x09;
 29e:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay2);
 2a0:	88 e2       	ldi	r24, 0x28	; 40
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 2a8:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay2);
 2aa:	88 e2       	ldi	r24, 0x28	; 40
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 2b2:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay2);
 2b4:	88 e2       	ldi	r24, 0x28	; 40
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 2bc:	94 e0       	ldi	r25, 0x04	; 4
 2be:	95 b9       	out	0x05, r25	; 5
			stepperDelay(delay2);
 2c0:	88 e2       	ldi	r24, 0x28	; 40
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 2c8:	e6 e0       	ldi	r30, 0x06	; 6
 2ca:	e5 b9       	out	0x05, r30	; 5
			stepperDelay(delay2);
 2cc:	88 e2       	ldi	r24, 0x28	; 40
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 2d4:	f2 e0       	ldi	r31, 0x02	; 2
 2d6:	f5 b9       	out	0x05, r31	; 5
			stepperDelay(delay2);
 2d8:	88 e2       	ldi	r24, 0x28	; 40
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 2e0:	83 e0       	ldi	r24, 0x03	; 3
 2e2:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay2);
 2e4:	88 e2       	ldi	r24, 0x28	; 40
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay2);
 2f0:	88 e2       	ldi	r24, 0x28	; 40
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 2f8:	79 cf       	rjmp	.-270    	; 0x1ec <main+0x70>
		}
		else if((20 <= tempC) & (tempC < 30))
 2fa:	c7 01       	movw	r24, r14
 2fc:	44 97       	sbiw	r24, 0x14	; 20
 2fe:	0a 97       	sbiw	r24, 0x0a	; 10
 300:	70 f5       	brcc	.+92     	; 0x35e <main+0x1e2>
		{
			PORTB=0x09;
 302:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay3);
 304:	8c e3       	ldi	r24, 0x3C	; 60
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 30c:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay3);
 30e:	8c e3       	ldi	r24, 0x3C	; 60
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 316:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay3);
 318:	8c e3       	ldi	r24, 0x3C	; 60
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 320:	84 e0       	ldi	r24, 0x04	; 4
 322:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay3);
 324:	8c e3       	ldi	r24, 0x3C	; 60
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 32c:	96 e0       	ldi	r25, 0x06	; 6
 32e:	95 b9       	out	0x05, r25	; 5
			stepperDelay(delay3);
 330:	8c e3       	ldi	r24, 0x3C	; 60
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 338:	e2 e0       	ldi	r30, 0x02	; 2
 33a:	e5 b9       	out	0x05, r30	; 5
			stepperDelay(delay3);
 33c:	8c e3       	ldi	r24, 0x3C	; 60
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 344:	83 e0       	ldi	r24, 0x03	; 3
 346:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay3);
 348:	8c e3       	ldi	r24, 0x3C	; 60
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay3);
 354:	8c e3       	ldi	r24, 0x3C	; 60
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 35c:	47 cf       	rjmp	.-370    	; 0x1ec <main+0x70>
		}
		else if((30 <= tempC) & (tempC < 40))
 35e:	c7 01       	movw	r24, r14
 360:	4e 97       	sbiw	r24, 0x1e	; 30
 362:	0a 97       	sbiw	r24, 0x0a	; 10
 364:	70 f5       	brcc	.+92     	; 0x3c2 <main+0x246>
		{
			PORTB=0x09;
 366:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay4);
 368:	80 e5       	ldi	r24, 0x50	; 80
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 370:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay4);
 372:	80 e5       	ldi	r24, 0x50	; 80
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 37a:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay4);
 37c:	80 e5       	ldi	r24, 0x50	; 80
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 384:	f4 e0       	ldi	r31, 0x04	; 4
 386:	f5 b9       	out	0x05, r31	; 5
			stepperDelay(delay4);
 388:	80 e5       	ldi	r24, 0x50	; 80
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 390:	86 e0       	ldi	r24, 0x06	; 6
 392:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay4);
 394:	80 e5       	ldi	r24, 0x50	; 80
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 39c:	92 e0       	ldi	r25, 0x02	; 2
 39e:	95 b9       	out	0x05, r25	; 5
			stepperDelay(delay4);
 3a0:	80 e5       	ldi	r24, 0x50	; 80
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 3a8:	83 e0       	ldi	r24, 0x03	; 3
 3aa:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay4);
 3ac:	80 e5       	ldi	r24, 0x50	; 80
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay4);
 3b8:	80 e5       	ldi	r24, 0x50	; 80
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 3c0:	15 cf       	rjmp	.-470    	; 0x1ec <main+0x70>
		}
		else if((40 <= tempC) & (tempC < 50))
 3c2:	c7 01       	movw	r24, r14
 3c4:	88 97       	sbiw	r24, 0x28	; 40
 3c6:	0a 97       	sbiw	r24, 0x0a	; 10
 3c8:	70 f5       	brcc	.+92     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		{
			PORTB=0x09;
 3ca:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay5);
 3cc:	84 e6       	ldi	r24, 0x64	; 100
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 3d4:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay5);
 3d6:	84 e6       	ldi	r24, 0x64	; 100
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 3de:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay5);
 3e0:	84 e6       	ldi	r24, 0x64	; 100
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 3e8:	e4 e0       	ldi	r30, 0x04	; 4
 3ea:	e5 b9       	out	0x05, r30	; 5
			stepperDelay(delay5);
 3ec:	84 e6       	ldi	r24, 0x64	; 100
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 3f4:	f6 e0       	ldi	r31, 0x06	; 6
 3f6:	f5 b9       	out	0x05, r31	; 5
			stepperDelay(delay5);
 3f8:	84 e6       	ldi	r24, 0x64	; 100
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 400:	82 e0       	ldi	r24, 0x02	; 2
 402:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay5);
 404:	84 e6       	ldi	r24, 0x64	; 100
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 40c:	83 e0       	ldi	r24, 0x03	; 3
 40e:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay5);
 410:	84 e6       	ldi	r24, 0x64	; 100
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay5);
 41c:	84 e6       	ldi	r24, 0x64	; 100
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 424:	e3 ce       	rjmp	.-570    	; 0x1ec <main+0x70>
		}
		else if((50 <= tempC) & (tempC < 60))
 426:	c7 01       	movw	r24, r14
 428:	c2 97       	sbiw	r24, 0x32	; 50
 42a:	0a 97       	sbiw	r24, 0x0a	; 10
 42c:	30 f5       	brcc	.+76     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
		{
			PORTB=0x09;
 42e:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay6);
 430:	c4 01       	movw	r24, r8
 432:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 436:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay6);
 438:	c4 01       	movw	r24, r8
 43a:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 43e:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay6);
 440:	c4 01       	movw	r24, r8
 442:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 446:	94 e0       	ldi	r25, 0x04	; 4
 448:	95 b9       	out	0x05, r25	; 5
			stepperDelay(delay6);
 44a:	c4 01       	movw	r24, r8
 44c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 450:	e6 e0       	ldi	r30, 0x06	; 6
 452:	e5 b9       	out	0x05, r30	; 5
			stepperDelay(delay6);
 454:	c4 01       	movw	r24, r8
 456:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 45a:	f2 e0       	ldi	r31, 0x02	; 2
 45c:	f5 b9       	out	0x05, r31	; 5
			stepperDelay(delay6);
 45e:	c4 01       	movw	r24, r8
 460:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 464:	83 e0       	ldi	r24, 0x03	; 3
 466:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay6);
 468:	c4 01       	movw	r24, r8
 46a:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay6);
 472:	c4 01       	movw	r24, r8
 474:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 478:	b9 ce       	rjmp	.-654    	; 0x1ec <main+0x70>
		}
		else if((60 <= tempC) & (tempC < 70))
 47a:	c7 01       	movw	r24, r14
 47c:	cc 97       	sbiw	r24, 0x3c	; 60
 47e:	0a 97       	sbiw	r24, 0x0a	; 10
 480:	70 f5       	brcc	.+92     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
		{
			PORTB=0x09;
 482:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay7);
 484:	8c e8       	ldi	r24, 0x8C	; 140
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 48c:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay7);
 48e:	8c e8       	ldi	r24, 0x8C	; 140
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 496:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay7);
 498:	8c e8       	ldi	r24, 0x8C	; 140
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 4a0:	84 e0       	ldi	r24, 0x04	; 4
 4a2:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay7);
 4a4:	8c e8       	ldi	r24, 0x8C	; 140
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 4ac:	96 e0       	ldi	r25, 0x06	; 6
 4ae:	95 b9       	out	0x05, r25	; 5
			stepperDelay(delay7);
 4b0:	8c e8       	ldi	r24, 0x8C	; 140
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 4b8:	e2 e0       	ldi	r30, 0x02	; 2
 4ba:	e5 b9       	out	0x05, r30	; 5
			stepperDelay(delay7);
 4bc:	8c e8       	ldi	r24, 0x8C	; 140
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 4c4:	83 e0       	ldi	r24, 0x03	; 3
 4c6:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay7);
 4c8:	8c e8       	ldi	r24, 0x8C	; 140
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay7);
 4d4:	8c e8       	ldi	r24, 0x8C	; 140
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 4dc:	87 ce       	rjmp	.-754    	; 0x1ec <main+0x70>
		}
		else if((70 <= tempC) & (tempC < 80))
 4de:	c7 01       	movw	r24, r14
 4e0:	86 54       	subi	r24, 0x46	; 70
 4e2:	91 09       	sbc	r25, r1
 4e4:	0a 97       	sbiw	r24, 0x0a	; 10
 4e6:	70 f5       	brcc	.+92     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
		{
			PORTB=0x09;
 4e8:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay8);
 4ea:	80 ea       	ldi	r24, 0xA0	; 160
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 4f2:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay8);
 4f4:	80 ea       	ldi	r24, 0xA0	; 160
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 4fc:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay8);
 4fe:	80 ea       	ldi	r24, 0xA0	; 160
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 506:	f4 e0       	ldi	r31, 0x04	; 4
 508:	f5 b9       	out	0x05, r31	; 5
			stepperDelay(delay8);
 50a:	80 ea       	ldi	r24, 0xA0	; 160
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 512:	86 e0       	ldi	r24, 0x06	; 6
 514:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay8);
 516:	80 ea       	ldi	r24, 0xA0	; 160
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 51e:	92 e0       	ldi	r25, 0x02	; 2
 520:	95 b9       	out	0x05, r25	; 5
			stepperDelay(delay8);
 522:	80 ea       	ldi	r24, 0xA0	; 160
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 52a:	83 e0       	ldi	r24, 0x03	; 3
 52c:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay8);
 52e:	80 ea       	ldi	r24, 0xA0	; 160
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay8);
 53a:	80 ea       	ldi	r24, 0xA0	; 160
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 542:	54 ce       	rjmp	.-856    	; 0x1ec <main+0x70>
		}
		else if((80 <= tempC) & (tempC < 90))
 544:	e0 e5       	ldi	r30, 0x50	; 80
 546:	ee 1a       	sub	r14, r30
 548:	f1 08       	sbc	r15, r1
 54a:	fa e0       	ldi	r31, 0x0A	; 10
 54c:	ef 16       	cp	r14, r31
 54e:	f1 04       	cpc	r15, r1
 550:	70 f5       	brcc	.+92     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
		{
			PORTB=0x09;
 552:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay9);
 554:	84 eb       	ldi	r24, 0xB4	; 180
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 55c:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay9);
 55e:	84 eb       	ldi	r24, 0xB4	; 180
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 566:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay9);
 568:	84 eb       	ldi	r24, 0xB4	; 180
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 570:	84 e0       	ldi	r24, 0x04	; 4
 572:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay9);
 574:	84 eb       	ldi	r24, 0xB4	; 180
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 57c:	96 e0       	ldi	r25, 0x06	; 6
 57e:	95 b9       	out	0x05, r25	; 5
			stepperDelay(delay9);
 580:	84 eb       	ldi	r24, 0xB4	; 180
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 588:	e2 e0       	ldi	r30, 0x02	; 2
 58a:	e5 b9       	out	0x05, r30	; 5
			stepperDelay(delay9);
 58c:	84 eb       	ldi	r24, 0xB4	; 180
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 594:	83 e0       	ldi	r24, 0x03	; 3
 596:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay9);
 598:	84 eb       	ldi	r24, 0xB4	; 180
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 5a0:	81 e0       	ldi	r24, 0x01	; 1
 5a2:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay9);
 5a4:	84 eb       	ldi	r24, 0xB4	; 180
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
 5ac:	1f ce       	rjmp	.-962    	; 0x1ec <main+0x70>
		}
		else
		{
			PORTB=0x09;
 5ae:	25 b8       	out	0x05, r2	; 5
			stepperDelay(delay10);
 5b0:	88 ec       	ldi	r24, 0xC8	; 200
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x08;
 5b8:	35 b8       	out	0x05, r3	; 5
			stepperDelay(delay10);
 5ba:	88 ec       	ldi	r24, 0xC8	; 200
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x0C;
 5c2:	45 b8       	out	0x05, r4	; 5
			stepperDelay(delay10);
 5c4:	88 ec       	ldi	r24, 0xC8	; 200
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x04;
 5cc:	f4 e0       	ldi	r31, 0x04	; 4
 5ce:	f5 b9       	out	0x05, r31	; 5
			stepperDelay(delay10);
 5d0:	88 ec       	ldi	r24, 0xC8	; 200
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x06;
 5d8:	86 e0       	ldi	r24, 0x06	; 6
 5da:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay10);
 5dc:	88 ec       	ldi	r24, 0xC8	; 200
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x02;
 5e4:	92 e0       	ldi	r25, 0x02	; 2
 5e6:	95 b9       	out	0x05, r25	; 5
			stepperDelay(delay10);
 5e8:	88 ec       	ldi	r24, 0xC8	; 200
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x03;
 5f0:	83 e0       	ldi	r24, 0x03	; 3
 5f2:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay10);
 5f4:	88 ec       	ldi	r24, 0xC8	; 200
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
			PORTB=0x01;
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	85 b9       	out	0x05, r24	; 5
			stepperDelay(delay10);
 600:	88 ec       	ldi	r24, 0xC8	; 200
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 9c 00 	call	0x138	; 0x138 <stepperDelay>
		}
		
	}
 608:	f1 cd       	rjmp	.-1054   	; 0x1ec <main+0x70>

0000060a <snprintf>:
 60a:	ae e0       	ldi	r26, 0x0E	; 14
 60c:	b0 e0       	ldi	r27, 0x00	; 0
 60e:	eb e0       	ldi	r30, 0x0B	; 11
 610:	f3 e0       	ldi	r31, 0x03	; 3
 612:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__prologue_saves__+0x1c>
 616:	0d 89       	ldd	r16, Y+21	; 0x15
 618:	1e 89       	ldd	r17, Y+22	; 0x16
 61a:	8f 89       	ldd	r24, Y+23	; 0x17
 61c:	98 8d       	ldd	r25, Y+24	; 0x18
 61e:	26 e0       	ldi	r18, 0x06	; 6
 620:	2c 83       	std	Y+4, r18	; 0x04
 622:	1a 83       	std	Y+2, r17	; 0x02
 624:	09 83       	std	Y+1, r16	; 0x01
 626:	97 ff       	sbrs	r25, 7
 628:	02 c0       	rjmp	.+4      	; 0x62e <snprintf+0x24>
 62a:	80 e0       	ldi	r24, 0x00	; 0
 62c:	90 e8       	ldi	r25, 0x80	; 128
 62e:	01 97       	sbiw	r24, 0x01	; 1
 630:	9e 83       	std	Y+6, r25	; 0x06
 632:	8d 83       	std	Y+5, r24	; 0x05
 634:	ae 01       	movw	r20, r28
 636:	45 5e       	subi	r20, 0xE5	; 229
 638:	5f 4f       	sbci	r21, 0xFF	; 255
 63a:	69 8d       	ldd	r22, Y+25	; 0x19
 63c:	7a 8d       	ldd	r23, Y+26	; 0x1a
 63e:	ce 01       	movw	r24, r28
 640:	01 96       	adiw	r24, 0x01	; 1
 642:	0e 94 35 03 	call	0x66a	; 0x66a <vfprintf>
 646:	4d 81       	ldd	r20, Y+5	; 0x05
 648:	5e 81       	ldd	r21, Y+6	; 0x06
 64a:	57 fd       	sbrc	r21, 7
 64c:	0a c0       	rjmp	.+20     	; 0x662 <snprintf+0x58>
 64e:	2f 81       	ldd	r18, Y+7	; 0x07
 650:	38 85       	ldd	r19, Y+8	; 0x08
 652:	42 17       	cp	r20, r18
 654:	53 07       	cpc	r21, r19
 656:	0c f4       	brge	.+2      	; 0x65a <snprintf+0x50>
 658:	9a 01       	movw	r18, r20
 65a:	f8 01       	movw	r30, r16
 65c:	e2 0f       	add	r30, r18
 65e:	f3 1f       	adc	r31, r19
 660:	10 82       	st	Z, r1
 662:	2e 96       	adiw	r28, 0x0e	; 14
 664:	e4 e0       	ldi	r30, 0x04	; 4
 666:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__epilogue_restores__+0x1c>

0000066a <vfprintf>:
 66a:	ab e0       	ldi	r26, 0x0B	; 11
 66c:	b0 e0       	ldi	r27, 0x00	; 0
 66e:	eb e3       	ldi	r30, 0x3B	; 59
 670:	f3 e0       	ldi	r31, 0x03	; 3
 672:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__prologue_saves__>
 676:	6c 01       	movw	r12, r24
 678:	7b 01       	movw	r14, r22
 67a:	8a 01       	movw	r16, r20
 67c:	fc 01       	movw	r30, r24
 67e:	17 82       	std	Z+7, r1	; 0x07
 680:	16 82       	std	Z+6, r1	; 0x06
 682:	83 81       	ldd	r24, Z+3	; 0x03
 684:	81 ff       	sbrs	r24, 1
 686:	cc c1       	rjmp	.+920    	; 0xa20 <__stack+0x121>
 688:	ce 01       	movw	r24, r28
 68a:	01 96       	adiw	r24, 0x01	; 1
 68c:	3c 01       	movw	r6, r24
 68e:	f6 01       	movw	r30, r12
 690:	93 81       	ldd	r25, Z+3	; 0x03
 692:	f7 01       	movw	r30, r14
 694:	93 fd       	sbrc	r25, 3
 696:	85 91       	lpm	r24, Z+
 698:	93 ff       	sbrs	r25, 3
 69a:	81 91       	ld	r24, Z+
 69c:	7f 01       	movw	r14, r30
 69e:	88 23       	and	r24, r24
 6a0:	09 f4       	brne	.+2      	; 0x6a4 <vfprintf+0x3a>
 6a2:	ba c1       	rjmp	.+884    	; 0xa18 <__stack+0x119>
 6a4:	85 32       	cpi	r24, 0x25	; 37
 6a6:	39 f4       	brne	.+14     	; 0x6b6 <vfprintf+0x4c>
 6a8:	93 fd       	sbrc	r25, 3
 6aa:	85 91       	lpm	r24, Z+
 6ac:	93 ff       	sbrs	r25, 3
 6ae:	81 91       	ld	r24, Z+
 6b0:	7f 01       	movw	r14, r30
 6b2:	85 32       	cpi	r24, 0x25	; 37
 6b4:	29 f4       	brne	.+10     	; 0x6c0 <vfprintf+0x56>
 6b6:	b6 01       	movw	r22, r12
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 6be:	e7 cf       	rjmp	.-50     	; 0x68e <vfprintf+0x24>
 6c0:	91 2c       	mov	r9, r1
 6c2:	21 2c       	mov	r2, r1
 6c4:	31 2c       	mov	r3, r1
 6c6:	ff e1       	ldi	r31, 0x1F	; 31
 6c8:	f3 15       	cp	r31, r3
 6ca:	d8 f0       	brcs	.+54     	; 0x702 <vfprintf+0x98>
 6cc:	8b 32       	cpi	r24, 0x2B	; 43
 6ce:	79 f0       	breq	.+30     	; 0x6ee <vfprintf+0x84>
 6d0:	38 f4       	brcc	.+14     	; 0x6e0 <vfprintf+0x76>
 6d2:	80 32       	cpi	r24, 0x20	; 32
 6d4:	79 f0       	breq	.+30     	; 0x6f4 <vfprintf+0x8a>
 6d6:	83 32       	cpi	r24, 0x23	; 35
 6d8:	a1 f4       	brne	.+40     	; 0x702 <vfprintf+0x98>
 6da:	23 2d       	mov	r18, r3
 6dc:	20 61       	ori	r18, 0x10	; 16
 6de:	1d c0       	rjmp	.+58     	; 0x71a <vfprintf+0xb0>
 6e0:	8d 32       	cpi	r24, 0x2D	; 45
 6e2:	61 f0       	breq	.+24     	; 0x6fc <vfprintf+0x92>
 6e4:	80 33       	cpi	r24, 0x30	; 48
 6e6:	69 f4       	brne	.+26     	; 0x702 <vfprintf+0x98>
 6e8:	23 2d       	mov	r18, r3
 6ea:	21 60       	ori	r18, 0x01	; 1
 6ec:	16 c0       	rjmp	.+44     	; 0x71a <vfprintf+0xb0>
 6ee:	83 2d       	mov	r24, r3
 6f0:	82 60       	ori	r24, 0x02	; 2
 6f2:	38 2e       	mov	r3, r24
 6f4:	e3 2d       	mov	r30, r3
 6f6:	e4 60       	ori	r30, 0x04	; 4
 6f8:	3e 2e       	mov	r3, r30
 6fa:	2a c0       	rjmp	.+84     	; 0x750 <vfprintf+0xe6>
 6fc:	f3 2d       	mov	r31, r3
 6fe:	f8 60       	ori	r31, 0x08	; 8
 700:	1d c0       	rjmp	.+58     	; 0x73c <vfprintf+0xd2>
 702:	37 fc       	sbrc	r3, 7
 704:	2d c0       	rjmp	.+90     	; 0x760 <vfprintf+0xf6>
 706:	20 ed       	ldi	r18, 0xD0	; 208
 708:	28 0f       	add	r18, r24
 70a:	2a 30       	cpi	r18, 0x0A	; 10
 70c:	40 f0       	brcs	.+16     	; 0x71e <vfprintf+0xb4>
 70e:	8e 32       	cpi	r24, 0x2E	; 46
 710:	b9 f4       	brne	.+46     	; 0x740 <vfprintf+0xd6>
 712:	36 fc       	sbrc	r3, 6
 714:	81 c1       	rjmp	.+770    	; 0xa18 <__stack+0x119>
 716:	23 2d       	mov	r18, r3
 718:	20 64       	ori	r18, 0x40	; 64
 71a:	32 2e       	mov	r3, r18
 71c:	19 c0       	rjmp	.+50     	; 0x750 <vfprintf+0xe6>
 71e:	36 fe       	sbrs	r3, 6
 720:	06 c0       	rjmp	.+12     	; 0x72e <vfprintf+0xc4>
 722:	8a e0       	ldi	r24, 0x0A	; 10
 724:	98 9e       	mul	r9, r24
 726:	20 0d       	add	r18, r0
 728:	11 24       	eor	r1, r1
 72a:	92 2e       	mov	r9, r18
 72c:	11 c0       	rjmp	.+34     	; 0x750 <vfprintf+0xe6>
 72e:	ea e0       	ldi	r30, 0x0A	; 10
 730:	2e 9e       	mul	r2, r30
 732:	20 0d       	add	r18, r0
 734:	11 24       	eor	r1, r1
 736:	22 2e       	mov	r2, r18
 738:	f3 2d       	mov	r31, r3
 73a:	f0 62       	ori	r31, 0x20	; 32
 73c:	3f 2e       	mov	r3, r31
 73e:	08 c0       	rjmp	.+16     	; 0x750 <vfprintf+0xe6>
 740:	8c 36       	cpi	r24, 0x6C	; 108
 742:	21 f4       	brne	.+8      	; 0x74c <vfprintf+0xe2>
 744:	83 2d       	mov	r24, r3
 746:	80 68       	ori	r24, 0x80	; 128
 748:	38 2e       	mov	r3, r24
 74a:	02 c0       	rjmp	.+4      	; 0x750 <vfprintf+0xe6>
 74c:	88 36       	cpi	r24, 0x68	; 104
 74e:	41 f4       	brne	.+16     	; 0x760 <vfprintf+0xf6>
 750:	f7 01       	movw	r30, r14
 752:	93 fd       	sbrc	r25, 3
 754:	85 91       	lpm	r24, Z+
 756:	93 ff       	sbrs	r25, 3
 758:	81 91       	ld	r24, Z+
 75a:	7f 01       	movw	r14, r30
 75c:	81 11       	cpse	r24, r1
 75e:	b3 cf       	rjmp	.-154    	; 0x6c6 <vfprintf+0x5c>
 760:	98 2f       	mov	r25, r24
 762:	9f 7d       	andi	r25, 0xDF	; 223
 764:	95 54       	subi	r25, 0x45	; 69
 766:	93 30       	cpi	r25, 0x03	; 3
 768:	28 f4       	brcc	.+10     	; 0x774 <vfprintf+0x10a>
 76a:	0c 5f       	subi	r16, 0xFC	; 252
 76c:	1f 4f       	sbci	r17, 0xFF	; 255
 76e:	9f e3       	ldi	r25, 0x3F	; 63
 770:	99 83       	std	Y+1, r25	; 0x01
 772:	0d c0       	rjmp	.+26     	; 0x78e <vfprintf+0x124>
 774:	83 36       	cpi	r24, 0x63	; 99
 776:	31 f0       	breq	.+12     	; 0x784 <vfprintf+0x11a>
 778:	83 37       	cpi	r24, 0x73	; 115
 77a:	71 f0       	breq	.+28     	; 0x798 <vfprintf+0x12e>
 77c:	83 35       	cpi	r24, 0x53	; 83
 77e:	09 f0       	breq	.+2      	; 0x782 <vfprintf+0x118>
 780:	59 c0       	rjmp	.+178    	; 0x834 <vfprintf+0x1ca>
 782:	21 c0       	rjmp	.+66     	; 0x7c6 <vfprintf+0x15c>
 784:	f8 01       	movw	r30, r16
 786:	80 81       	ld	r24, Z
 788:	89 83       	std	Y+1, r24	; 0x01
 78a:	0e 5f       	subi	r16, 0xFE	; 254
 78c:	1f 4f       	sbci	r17, 0xFF	; 255
 78e:	88 24       	eor	r8, r8
 790:	83 94       	inc	r8
 792:	91 2c       	mov	r9, r1
 794:	53 01       	movw	r10, r6
 796:	13 c0       	rjmp	.+38     	; 0x7be <vfprintf+0x154>
 798:	28 01       	movw	r4, r16
 79a:	f2 e0       	ldi	r31, 0x02	; 2
 79c:	4f 0e       	add	r4, r31
 79e:	51 1c       	adc	r5, r1
 7a0:	f8 01       	movw	r30, r16
 7a2:	a0 80       	ld	r10, Z
 7a4:	b1 80       	ldd	r11, Z+1	; 0x01
 7a6:	36 fe       	sbrs	r3, 6
 7a8:	03 c0       	rjmp	.+6      	; 0x7b0 <vfprintf+0x146>
 7aa:	69 2d       	mov	r22, r9
 7ac:	70 e0       	ldi	r23, 0x00	; 0
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <vfprintf+0x14a>
 7b0:	6f ef       	ldi	r22, 0xFF	; 255
 7b2:	7f ef       	ldi	r23, 0xFF	; 255
 7b4:	c5 01       	movw	r24, r10
 7b6:	0e 94 21 05 	call	0xa42	; 0xa42 <strnlen>
 7ba:	4c 01       	movw	r8, r24
 7bc:	82 01       	movw	r16, r4
 7be:	f3 2d       	mov	r31, r3
 7c0:	ff 77       	andi	r31, 0x7F	; 127
 7c2:	3f 2e       	mov	r3, r31
 7c4:	16 c0       	rjmp	.+44     	; 0x7f2 <vfprintf+0x188>
 7c6:	28 01       	movw	r4, r16
 7c8:	22 e0       	ldi	r18, 0x02	; 2
 7ca:	42 0e       	add	r4, r18
 7cc:	51 1c       	adc	r5, r1
 7ce:	f8 01       	movw	r30, r16
 7d0:	a0 80       	ld	r10, Z
 7d2:	b1 80       	ldd	r11, Z+1	; 0x01
 7d4:	36 fe       	sbrs	r3, 6
 7d6:	03 c0       	rjmp	.+6      	; 0x7de <vfprintf+0x174>
 7d8:	69 2d       	mov	r22, r9
 7da:	70 e0       	ldi	r23, 0x00	; 0
 7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <vfprintf+0x178>
 7de:	6f ef       	ldi	r22, 0xFF	; 255
 7e0:	7f ef       	ldi	r23, 0xFF	; 255
 7e2:	c5 01       	movw	r24, r10
 7e4:	0e 94 16 05 	call	0xa2c	; 0xa2c <strnlen_P>
 7e8:	4c 01       	movw	r8, r24
 7ea:	f3 2d       	mov	r31, r3
 7ec:	f0 68       	ori	r31, 0x80	; 128
 7ee:	3f 2e       	mov	r3, r31
 7f0:	82 01       	movw	r16, r4
 7f2:	33 fc       	sbrc	r3, 3
 7f4:	1b c0       	rjmp	.+54     	; 0x82c <vfprintf+0x1c2>
 7f6:	82 2d       	mov	r24, r2
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	88 16       	cp	r8, r24
 7fc:	99 06       	cpc	r9, r25
 7fe:	b0 f4       	brcc	.+44     	; 0x82c <vfprintf+0x1c2>
 800:	b6 01       	movw	r22, r12
 802:	80 e2       	ldi	r24, 0x20	; 32
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 80a:	2a 94       	dec	r2
 80c:	f4 cf       	rjmp	.-24     	; 0x7f6 <vfprintf+0x18c>
 80e:	f5 01       	movw	r30, r10
 810:	37 fc       	sbrc	r3, 7
 812:	85 91       	lpm	r24, Z+
 814:	37 fe       	sbrs	r3, 7
 816:	81 91       	ld	r24, Z+
 818:	5f 01       	movw	r10, r30
 81a:	b6 01       	movw	r22, r12
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 822:	21 10       	cpse	r2, r1
 824:	2a 94       	dec	r2
 826:	21 e0       	ldi	r18, 0x01	; 1
 828:	82 1a       	sub	r8, r18
 82a:	91 08       	sbc	r9, r1
 82c:	81 14       	cp	r8, r1
 82e:	91 04       	cpc	r9, r1
 830:	71 f7       	brne	.-36     	; 0x80e <vfprintf+0x1a4>
 832:	e8 c0       	rjmp	.+464    	; 0xa04 <__stack+0x105>
 834:	84 36       	cpi	r24, 0x64	; 100
 836:	11 f0       	breq	.+4      	; 0x83c <vfprintf+0x1d2>
 838:	89 36       	cpi	r24, 0x69	; 105
 83a:	41 f5       	brne	.+80     	; 0x88c <vfprintf+0x222>
 83c:	f8 01       	movw	r30, r16
 83e:	37 fe       	sbrs	r3, 7
 840:	07 c0       	rjmp	.+14     	; 0x850 <vfprintf+0x1e6>
 842:	60 81       	ld	r22, Z
 844:	71 81       	ldd	r23, Z+1	; 0x01
 846:	82 81       	ldd	r24, Z+2	; 0x02
 848:	93 81       	ldd	r25, Z+3	; 0x03
 84a:	0c 5f       	subi	r16, 0xFC	; 252
 84c:	1f 4f       	sbci	r17, 0xFF	; 255
 84e:	08 c0       	rjmp	.+16     	; 0x860 <vfprintf+0x1f6>
 850:	60 81       	ld	r22, Z
 852:	71 81       	ldd	r23, Z+1	; 0x01
 854:	07 2e       	mov	r0, r23
 856:	00 0c       	add	r0, r0
 858:	88 0b       	sbc	r24, r24
 85a:	99 0b       	sbc	r25, r25
 85c:	0e 5f       	subi	r16, 0xFE	; 254
 85e:	1f 4f       	sbci	r17, 0xFF	; 255
 860:	f3 2d       	mov	r31, r3
 862:	ff 76       	andi	r31, 0x6F	; 111
 864:	3f 2e       	mov	r3, r31
 866:	97 ff       	sbrs	r25, 7
 868:	09 c0       	rjmp	.+18     	; 0x87c <vfprintf+0x212>
 86a:	90 95       	com	r25
 86c:	80 95       	com	r24
 86e:	70 95       	com	r23
 870:	61 95       	neg	r22
 872:	7f 4f       	sbci	r23, 0xFF	; 255
 874:	8f 4f       	sbci	r24, 0xFF	; 255
 876:	9f 4f       	sbci	r25, 0xFF	; 255
 878:	f0 68       	ori	r31, 0x80	; 128
 87a:	3f 2e       	mov	r3, r31
 87c:	2a e0       	ldi	r18, 0x0A	; 10
 87e:	30 e0       	ldi	r19, 0x00	; 0
 880:	a3 01       	movw	r20, r6
 882:	0e 94 68 05 	call	0xad0	; 0xad0 <__ultoa_invert>
 886:	88 2e       	mov	r8, r24
 888:	86 18       	sub	r8, r6
 88a:	45 c0       	rjmp	.+138    	; 0x916 <__stack+0x17>
 88c:	85 37       	cpi	r24, 0x75	; 117
 88e:	31 f4       	brne	.+12     	; 0x89c <vfprintf+0x232>
 890:	23 2d       	mov	r18, r3
 892:	2f 7e       	andi	r18, 0xEF	; 239
 894:	b2 2e       	mov	r11, r18
 896:	2a e0       	ldi	r18, 0x0A	; 10
 898:	30 e0       	ldi	r19, 0x00	; 0
 89a:	25 c0       	rjmp	.+74     	; 0x8e6 <vfprintf+0x27c>
 89c:	93 2d       	mov	r25, r3
 89e:	99 7f       	andi	r25, 0xF9	; 249
 8a0:	b9 2e       	mov	r11, r25
 8a2:	8f 36       	cpi	r24, 0x6F	; 111
 8a4:	c1 f0       	breq	.+48     	; 0x8d6 <vfprintf+0x26c>
 8a6:	18 f4       	brcc	.+6      	; 0x8ae <vfprintf+0x244>
 8a8:	88 35       	cpi	r24, 0x58	; 88
 8aa:	79 f0       	breq	.+30     	; 0x8ca <vfprintf+0x260>
 8ac:	b5 c0       	rjmp	.+362    	; 0xa18 <__stack+0x119>
 8ae:	80 37       	cpi	r24, 0x70	; 112
 8b0:	19 f0       	breq	.+6      	; 0x8b8 <vfprintf+0x24e>
 8b2:	88 37       	cpi	r24, 0x78	; 120
 8b4:	21 f0       	breq	.+8      	; 0x8be <vfprintf+0x254>
 8b6:	b0 c0       	rjmp	.+352    	; 0xa18 <__stack+0x119>
 8b8:	e9 2f       	mov	r30, r25
 8ba:	e0 61       	ori	r30, 0x10	; 16
 8bc:	be 2e       	mov	r11, r30
 8be:	b4 fe       	sbrs	r11, 4
 8c0:	0d c0       	rjmp	.+26     	; 0x8dc <vfprintf+0x272>
 8c2:	fb 2d       	mov	r31, r11
 8c4:	f4 60       	ori	r31, 0x04	; 4
 8c6:	bf 2e       	mov	r11, r31
 8c8:	09 c0       	rjmp	.+18     	; 0x8dc <vfprintf+0x272>
 8ca:	34 fe       	sbrs	r3, 4
 8cc:	0a c0       	rjmp	.+20     	; 0x8e2 <vfprintf+0x278>
 8ce:	29 2f       	mov	r18, r25
 8d0:	26 60       	ori	r18, 0x06	; 6
 8d2:	b2 2e       	mov	r11, r18
 8d4:	06 c0       	rjmp	.+12     	; 0x8e2 <vfprintf+0x278>
 8d6:	28 e0       	ldi	r18, 0x08	; 8
 8d8:	30 e0       	ldi	r19, 0x00	; 0
 8da:	05 c0       	rjmp	.+10     	; 0x8e6 <vfprintf+0x27c>
 8dc:	20 e1       	ldi	r18, 0x10	; 16
 8de:	30 e0       	ldi	r19, 0x00	; 0
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <vfprintf+0x27c>
 8e2:	20 e1       	ldi	r18, 0x10	; 16
 8e4:	32 e0       	ldi	r19, 0x02	; 2
 8e6:	f8 01       	movw	r30, r16
 8e8:	b7 fe       	sbrs	r11, 7
 8ea:	07 c0       	rjmp	.+14     	; 0x8fa <vfprintf+0x290>
 8ec:	60 81       	ld	r22, Z
 8ee:	71 81       	ldd	r23, Z+1	; 0x01
 8f0:	82 81       	ldd	r24, Z+2	; 0x02
 8f2:	93 81       	ldd	r25, Z+3	; 0x03
 8f4:	0c 5f       	subi	r16, 0xFC	; 252
 8f6:	1f 4f       	sbci	r17, 0xFF	; 255
 8f8:	06 c0       	rjmp	.+12     	; 0x906 <__stack+0x7>
 8fa:	60 81       	ld	r22, Z
 8fc:	71 81       	ldd	r23, Z+1	; 0x01
 8fe:	80 e0       	ldi	r24, 0x00	; 0
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 5f       	subi	r16, 0xFE	; 254
 904:	1f 4f       	sbci	r17, 0xFF	; 255
 906:	a3 01       	movw	r20, r6
 908:	0e 94 68 05 	call	0xad0	; 0xad0 <__ultoa_invert>
 90c:	88 2e       	mov	r8, r24
 90e:	86 18       	sub	r8, r6
 910:	fb 2d       	mov	r31, r11
 912:	ff 77       	andi	r31, 0x7F	; 127
 914:	3f 2e       	mov	r3, r31
 916:	36 fe       	sbrs	r3, 6
 918:	0d c0       	rjmp	.+26     	; 0x934 <__stack+0x35>
 91a:	23 2d       	mov	r18, r3
 91c:	2e 7f       	andi	r18, 0xFE	; 254
 91e:	a2 2e       	mov	r10, r18
 920:	89 14       	cp	r8, r9
 922:	58 f4       	brcc	.+22     	; 0x93a <__stack+0x3b>
 924:	34 fe       	sbrs	r3, 4
 926:	0b c0       	rjmp	.+22     	; 0x93e <__stack+0x3f>
 928:	32 fc       	sbrc	r3, 2
 92a:	09 c0       	rjmp	.+18     	; 0x93e <__stack+0x3f>
 92c:	83 2d       	mov	r24, r3
 92e:	8e 7e       	andi	r24, 0xEE	; 238
 930:	a8 2e       	mov	r10, r24
 932:	05 c0       	rjmp	.+10     	; 0x93e <__stack+0x3f>
 934:	b8 2c       	mov	r11, r8
 936:	a3 2c       	mov	r10, r3
 938:	03 c0       	rjmp	.+6      	; 0x940 <__stack+0x41>
 93a:	b8 2c       	mov	r11, r8
 93c:	01 c0       	rjmp	.+2      	; 0x940 <__stack+0x41>
 93e:	b9 2c       	mov	r11, r9
 940:	a4 fe       	sbrs	r10, 4
 942:	0f c0       	rjmp	.+30     	; 0x962 <__stack+0x63>
 944:	fe 01       	movw	r30, r28
 946:	e8 0d       	add	r30, r8
 948:	f1 1d       	adc	r31, r1
 94a:	80 81       	ld	r24, Z
 94c:	80 33       	cpi	r24, 0x30	; 48
 94e:	21 f4       	brne	.+8      	; 0x958 <__stack+0x59>
 950:	9a 2d       	mov	r25, r10
 952:	99 7e       	andi	r25, 0xE9	; 233
 954:	a9 2e       	mov	r10, r25
 956:	09 c0       	rjmp	.+18     	; 0x96a <__stack+0x6b>
 958:	a2 fe       	sbrs	r10, 2
 95a:	06 c0       	rjmp	.+12     	; 0x968 <__stack+0x69>
 95c:	b3 94       	inc	r11
 95e:	b3 94       	inc	r11
 960:	04 c0       	rjmp	.+8      	; 0x96a <__stack+0x6b>
 962:	8a 2d       	mov	r24, r10
 964:	86 78       	andi	r24, 0x86	; 134
 966:	09 f0       	breq	.+2      	; 0x96a <__stack+0x6b>
 968:	b3 94       	inc	r11
 96a:	a3 fc       	sbrc	r10, 3
 96c:	11 c0       	rjmp	.+34     	; 0x990 <__stack+0x91>
 96e:	a0 fe       	sbrs	r10, 0
 970:	06 c0       	rjmp	.+12     	; 0x97e <__stack+0x7f>
 972:	b2 14       	cp	r11, r2
 974:	88 f4       	brcc	.+34     	; 0x998 <__stack+0x99>
 976:	28 0c       	add	r2, r8
 978:	92 2c       	mov	r9, r2
 97a:	9b 18       	sub	r9, r11
 97c:	0e c0       	rjmp	.+28     	; 0x99a <__stack+0x9b>
 97e:	b2 14       	cp	r11, r2
 980:	60 f4       	brcc	.+24     	; 0x99a <__stack+0x9b>
 982:	b6 01       	movw	r22, r12
 984:	80 e2       	ldi	r24, 0x20	; 32
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 98c:	b3 94       	inc	r11
 98e:	f7 cf       	rjmp	.-18     	; 0x97e <__stack+0x7f>
 990:	b2 14       	cp	r11, r2
 992:	18 f4       	brcc	.+6      	; 0x99a <__stack+0x9b>
 994:	2b 18       	sub	r2, r11
 996:	02 c0       	rjmp	.+4      	; 0x99c <__stack+0x9d>
 998:	98 2c       	mov	r9, r8
 99a:	21 2c       	mov	r2, r1
 99c:	a4 fe       	sbrs	r10, 4
 99e:	10 c0       	rjmp	.+32     	; 0x9c0 <__stack+0xc1>
 9a0:	b6 01       	movw	r22, r12
 9a2:	80 e3       	ldi	r24, 0x30	; 48
 9a4:	90 e0       	ldi	r25, 0x00	; 0
 9a6:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 9aa:	a2 fe       	sbrs	r10, 2
 9ac:	17 c0       	rjmp	.+46     	; 0x9dc <__stack+0xdd>
 9ae:	a1 fc       	sbrc	r10, 1
 9b0:	03 c0       	rjmp	.+6      	; 0x9b8 <__stack+0xb9>
 9b2:	88 e7       	ldi	r24, 0x78	; 120
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	02 c0       	rjmp	.+4      	; 0x9bc <__stack+0xbd>
 9b8:	88 e5       	ldi	r24, 0x58	; 88
 9ba:	90 e0       	ldi	r25, 0x00	; 0
 9bc:	b6 01       	movw	r22, r12
 9be:	0c c0       	rjmp	.+24     	; 0x9d8 <__stack+0xd9>
 9c0:	8a 2d       	mov	r24, r10
 9c2:	86 78       	andi	r24, 0x86	; 134
 9c4:	59 f0       	breq	.+22     	; 0x9dc <__stack+0xdd>
 9c6:	a1 fe       	sbrs	r10, 1
 9c8:	02 c0       	rjmp	.+4      	; 0x9ce <__stack+0xcf>
 9ca:	8b e2       	ldi	r24, 0x2B	; 43
 9cc:	01 c0       	rjmp	.+2      	; 0x9d0 <__stack+0xd1>
 9ce:	80 e2       	ldi	r24, 0x20	; 32
 9d0:	a7 fc       	sbrc	r10, 7
 9d2:	8d e2       	ldi	r24, 0x2D	; 45
 9d4:	b6 01       	movw	r22, r12
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 9dc:	89 14       	cp	r8, r9
 9de:	38 f4       	brcc	.+14     	; 0x9ee <__stack+0xef>
 9e0:	b6 01       	movw	r22, r12
 9e2:	80 e3       	ldi	r24, 0x30	; 48
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 9ea:	9a 94       	dec	r9
 9ec:	f7 cf       	rjmp	.-18     	; 0x9dc <__stack+0xdd>
 9ee:	8a 94       	dec	r8
 9f0:	f3 01       	movw	r30, r6
 9f2:	e8 0d       	add	r30, r8
 9f4:	f1 1d       	adc	r31, r1
 9f6:	80 81       	ld	r24, Z
 9f8:	b6 01       	movw	r22, r12
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 a00:	81 10       	cpse	r8, r1
 a02:	f5 cf       	rjmp	.-22     	; 0x9ee <__stack+0xef>
 a04:	22 20       	and	r2, r2
 a06:	09 f4       	brne	.+2      	; 0xa0a <__stack+0x10b>
 a08:	42 ce       	rjmp	.-892    	; 0x68e <vfprintf+0x24>
 a0a:	b6 01       	movw	r22, r12
 a0c:	80 e2       	ldi	r24, 0x20	; 32
 a0e:	90 e0       	ldi	r25, 0x00	; 0
 a10:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 a14:	2a 94       	dec	r2
 a16:	f6 cf       	rjmp	.-20     	; 0xa04 <__stack+0x105>
 a18:	f6 01       	movw	r30, r12
 a1a:	86 81       	ldd	r24, Z+6	; 0x06
 a1c:	97 81       	ldd	r25, Z+7	; 0x07
 a1e:	02 c0       	rjmp	.+4      	; 0xa24 <__stack+0x125>
 a20:	8f ef       	ldi	r24, 0xFF	; 255
 a22:	9f ef       	ldi	r25, 0xFF	; 255
 a24:	2b 96       	adiw	r28, 0x0b	; 11
 a26:	e2 e1       	ldi	r30, 0x12	; 18
 a28:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__epilogue_restores__>

00000a2c <strnlen_P>:
 a2c:	fc 01       	movw	r30, r24
 a2e:	05 90       	lpm	r0, Z+
 a30:	61 50       	subi	r22, 0x01	; 1
 a32:	70 40       	sbci	r23, 0x00	; 0
 a34:	01 10       	cpse	r0, r1
 a36:	d8 f7       	brcc	.-10     	; 0xa2e <strnlen_P+0x2>
 a38:	80 95       	com	r24
 a3a:	90 95       	com	r25
 a3c:	8e 0f       	add	r24, r30
 a3e:	9f 1f       	adc	r25, r31
 a40:	08 95       	ret

00000a42 <strnlen>:
 a42:	fc 01       	movw	r30, r24
 a44:	61 50       	subi	r22, 0x01	; 1
 a46:	70 40       	sbci	r23, 0x00	; 0
 a48:	01 90       	ld	r0, Z+
 a4a:	01 10       	cpse	r0, r1
 a4c:	d8 f7       	brcc	.-10     	; 0xa44 <strnlen+0x2>
 a4e:	80 95       	com	r24
 a50:	90 95       	com	r25
 a52:	8e 0f       	add	r24, r30
 a54:	9f 1f       	adc	r25, r31
 a56:	08 95       	ret

00000a58 <fputc>:
 a58:	0f 93       	push	r16
 a5a:	1f 93       	push	r17
 a5c:	cf 93       	push	r28
 a5e:	df 93       	push	r29
 a60:	fb 01       	movw	r30, r22
 a62:	23 81       	ldd	r18, Z+3	; 0x03
 a64:	21 fd       	sbrc	r18, 1
 a66:	03 c0       	rjmp	.+6      	; 0xa6e <fputc+0x16>
 a68:	8f ef       	ldi	r24, 0xFF	; 255
 a6a:	9f ef       	ldi	r25, 0xFF	; 255
 a6c:	2c c0       	rjmp	.+88     	; 0xac6 <fputc+0x6e>
 a6e:	22 ff       	sbrs	r18, 2
 a70:	16 c0       	rjmp	.+44     	; 0xa9e <fputc+0x46>
 a72:	46 81       	ldd	r20, Z+6	; 0x06
 a74:	57 81       	ldd	r21, Z+7	; 0x07
 a76:	24 81       	ldd	r18, Z+4	; 0x04
 a78:	35 81       	ldd	r19, Z+5	; 0x05
 a7a:	42 17       	cp	r20, r18
 a7c:	53 07       	cpc	r21, r19
 a7e:	44 f4       	brge	.+16     	; 0xa90 <fputc+0x38>
 a80:	a0 81       	ld	r26, Z
 a82:	b1 81       	ldd	r27, Z+1	; 0x01
 a84:	9d 01       	movw	r18, r26
 a86:	2f 5f       	subi	r18, 0xFF	; 255
 a88:	3f 4f       	sbci	r19, 0xFF	; 255
 a8a:	31 83       	std	Z+1, r19	; 0x01
 a8c:	20 83       	st	Z, r18
 a8e:	8c 93       	st	X, r24
 a90:	26 81       	ldd	r18, Z+6	; 0x06
 a92:	37 81       	ldd	r19, Z+7	; 0x07
 a94:	2f 5f       	subi	r18, 0xFF	; 255
 a96:	3f 4f       	sbci	r19, 0xFF	; 255
 a98:	37 83       	std	Z+7, r19	; 0x07
 a9a:	26 83       	std	Z+6, r18	; 0x06
 a9c:	14 c0       	rjmp	.+40     	; 0xac6 <fputc+0x6e>
 a9e:	8b 01       	movw	r16, r22
 aa0:	ec 01       	movw	r28, r24
 aa2:	fb 01       	movw	r30, r22
 aa4:	00 84       	ldd	r0, Z+8	; 0x08
 aa6:	f1 85       	ldd	r31, Z+9	; 0x09
 aa8:	e0 2d       	mov	r30, r0
 aaa:	09 95       	icall
 aac:	89 2b       	or	r24, r25
 aae:	e1 f6       	brne	.-72     	; 0xa68 <fputc+0x10>
 ab0:	d8 01       	movw	r26, r16
 ab2:	16 96       	adiw	r26, 0x06	; 6
 ab4:	8d 91       	ld	r24, X+
 ab6:	9c 91       	ld	r25, X
 ab8:	17 97       	sbiw	r26, 0x07	; 7
 aba:	01 96       	adiw	r24, 0x01	; 1
 abc:	17 96       	adiw	r26, 0x07	; 7
 abe:	9c 93       	st	X, r25
 ac0:	8e 93       	st	-X, r24
 ac2:	16 97       	sbiw	r26, 0x06	; 6
 ac4:	ce 01       	movw	r24, r28
 ac6:	df 91       	pop	r29
 ac8:	cf 91       	pop	r28
 aca:	1f 91       	pop	r17
 acc:	0f 91       	pop	r16
 ace:	08 95       	ret

00000ad0 <__ultoa_invert>:
 ad0:	fa 01       	movw	r30, r20
 ad2:	aa 27       	eor	r26, r26
 ad4:	28 30       	cpi	r18, 0x08	; 8
 ad6:	51 f1       	breq	.+84     	; 0xb2c <__ultoa_invert+0x5c>
 ad8:	20 31       	cpi	r18, 0x10	; 16
 ada:	81 f1       	breq	.+96     	; 0xb3c <__ultoa_invert+0x6c>
 adc:	e8 94       	clt
 ade:	6f 93       	push	r22
 ae0:	6e 7f       	andi	r22, 0xFE	; 254
 ae2:	6e 5f       	subi	r22, 0xFE	; 254
 ae4:	7f 4f       	sbci	r23, 0xFF	; 255
 ae6:	8f 4f       	sbci	r24, 0xFF	; 255
 ae8:	9f 4f       	sbci	r25, 0xFF	; 255
 aea:	af 4f       	sbci	r26, 0xFF	; 255
 aec:	b1 e0       	ldi	r27, 0x01	; 1
 aee:	3e d0       	rcall	.+124    	; 0xb6c <__ultoa_invert+0x9c>
 af0:	b4 e0       	ldi	r27, 0x04	; 4
 af2:	3c d0       	rcall	.+120    	; 0xb6c <__ultoa_invert+0x9c>
 af4:	67 0f       	add	r22, r23
 af6:	78 1f       	adc	r23, r24
 af8:	89 1f       	adc	r24, r25
 afa:	9a 1f       	adc	r25, r26
 afc:	a1 1d       	adc	r26, r1
 afe:	68 0f       	add	r22, r24
 b00:	79 1f       	adc	r23, r25
 b02:	8a 1f       	adc	r24, r26
 b04:	91 1d       	adc	r25, r1
 b06:	a1 1d       	adc	r26, r1
 b08:	6a 0f       	add	r22, r26
 b0a:	71 1d       	adc	r23, r1
 b0c:	81 1d       	adc	r24, r1
 b0e:	91 1d       	adc	r25, r1
 b10:	a1 1d       	adc	r26, r1
 b12:	20 d0       	rcall	.+64     	; 0xb54 <__ultoa_invert+0x84>
 b14:	09 f4       	brne	.+2      	; 0xb18 <__ultoa_invert+0x48>
 b16:	68 94       	set
 b18:	3f 91       	pop	r19
 b1a:	2a e0       	ldi	r18, 0x0A	; 10
 b1c:	26 9f       	mul	r18, r22
 b1e:	11 24       	eor	r1, r1
 b20:	30 19       	sub	r19, r0
 b22:	30 5d       	subi	r19, 0xD0	; 208
 b24:	31 93       	st	Z+, r19
 b26:	de f6       	brtc	.-74     	; 0xade <__ultoa_invert+0xe>
 b28:	cf 01       	movw	r24, r30
 b2a:	08 95       	ret
 b2c:	46 2f       	mov	r20, r22
 b2e:	47 70       	andi	r20, 0x07	; 7
 b30:	40 5d       	subi	r20, 0xD0	; 208
 b32:	41 93       	st	Z+, r20
 b34:	b3 e0       	ldi	r27, 0x03	; 3
 b36:	0f d0       	rcall	.+30     	; 0xb56 <__ultoa_invert+0x86>
 b38:	c9 f7       	brne	.-14     	; 0xb2c <__ultoa_invert+0x5c>
 b3a:	f6 cf       	rjmp	.-20     	; 0xb28 <__ultoa_invert+0x58>
 b3c:	46 2f       	mov	r20, r22
 b3e:	4f 70       	andi	r20, 0x0F	; 15
 b40:	40 5d       	subi	r20, 0xD0	; 208
 b42:	4a 33       	cpi	r20, 0x3A	; 58
 b44:	18 f0       	brcs	.+6      	; 0xb4c <__ultoa_invert+0x7c>
 b46:	49 5d       	subi	r20, 0xD9	; 217
 b48:	31 fd       	sbrc	r19, 1
 b4a:	40 52       	subi	r20, 0x20	; 32
 b4c:	41 93       	st	Z+, r20
 b4e:	02 d0       	rcall	.+4      	; 0xb54 <__ultoa_invert+0x84>
 b50:	a9 f7       	brne	.-22     	; 0xb3c <__ultoa_invert+0x6c>
 b52:	ea cf       	rjmp	.-44     	; 0xb28 <__ultoa_invert+0x58>
 b54:	b4 e0       	ldi	r27, 0x04	; 4
 b56:	a6 95       	lsr	r26
 b58:	97 95       	ror	r25
 b5a:	87 95       	ror	r24
 b5c:	77 95       	ror	r23
 b5e:	67 95       	ror	r22
 b60:	ba 95       	dec	r27
 b62:	c9 f7       	brne	.-14     	; 0xb56 <__ultoa_invert+0x86>
 b64:	00 97       	sbiw	r24, 0x00	; 0
 b66:	61 05       	cpc	r22, r1
 b68:	71 05       	cpc	r23, r1
 b6a:	08 95       	ret
 b6c:	9b 01       	movw	r18, r22
 b6e:	ac 01       	movw	r20, r24
 b70:	0a 2e       	mov	r0, r26
 b72:	06 94       	lsr	r0
 b74:	57 95       	ror	r21
 b76:	47 95       	ror	r20
 b78:	37 95       	ror	r19
 b7a:	27 95       	ror	r18
 b7c:	ba 95       	dec	r27
 b7e:	c9 f7       	brne	.-14     	; 0xb72 <__ultoa_invert+0xa2>
 b80:	62 0f       	add	r22, r18
 b82:	73 1f       	adc	r23, r19
 b84:	84 1f       	adc	r24, r20
 b86:	95 1f       	adc	r25, r21
 b88:	a0 1d       	adc	r26, r0
 b8a:	08 95       	ret

00000b8c <__prologue_saves__>:
 b8c:	2f 92       	push	r2
 b8e:	3f 92       	push	r3
 b90:	4f 92       	push	r4
 b92:	5f 92       	push	r5
 b94:	6f 92       	push	r6
 b96:	7f 92       	push	r7
 b98:	8f 92       	push	r8
 b9a:	9f 92       	push	r9
 b9c:	af 92       	push	r10
 b9e:	bf 92       	push	r11
 ba0:	cf 92       	push	r12
 ba2:	df 92       	push	r13
 ba4:	ef 92       	push	r14
 ba6:	ff 92       	push	r15
 ba8:	0f 93       	push	r16
 baa:	1f 93       	push	r17
 bac:	cf 93       	push	r28
 bae:	df 93       	push	r29
 bb0:	cd b7       	in	r28, 0x3d	; 61
 bb2:	de b7       	in	r29, 0x3e	; 62
 bb4:	ca 1b       	sub	r28, r26
 bb6:	db 0b       	sbc	r29, r27
 bb8:	0f b6       	in	r0, 0x3f	; 63
 bba:	f8 94       	cli
 bbc:	de bf       	out	0x3e, r29	; 62
 bbe:	0f be       	out	0x3f, r0	; 63
 bc0:	cd bf       	out	0x3d, r28	; 61
 bc2:	09 94       	ijmp

00000bc4 <__epilogue_restores__>:
 bc4:	2a 88       	ldd	r2, Y+18	; 0x12
 bc6:	39 88       	ldd	r3, Y+17	; 0x11
 bc8:	48 88       	ldd	r4, Y+16	; 0x10
 bca:	5f 84       	ldd	r5, Y+15	; 0x0f
 bcc:	6e 84       	ldd	r6, Y+14	; 0x0e
 bce:	7d 84       	ldd	r7, Y+13	; 0x0d
 bd0:	8c 84       	ldd	r8, Y+12	; 0x0c
 bd2:	9b 84       	ldd	r9, Y+11	; 0x0b
 bd4:	aa 84       	ldd	r10, Y+10	; 0x0a
 bd6:	b9 84       	ldd	r11, Y+9	; 0x09
 bd8:	c8 84       	ldd	r12, Y+8	; 0x08
 bda:	df 80       	ldd	r13, Y+7	; 0x07
 bdc:	ee 80       	ldd	r14, Y+6	; 0x06
 bde:	fd 80       	ldd	r15, Y+5	; 0x05
 be0:	0c 81       	ldd	r16, Y+4	; 0x04
 be2:	1b 81       	ldd	r17, Y+3	; 0x03
 be4:	aa 81       	ldd	r26, Y+2	; 0x02
 be6:	b9 81       	ldd	r27, Y+1	; 0x01
 be8:	ce 0f       	add	r28, r30
 bea:	d1 1d       	adc	r29, r1
 bec:	0f b6       	in	r0, 0x3f	; 63
 bee:	f8 94       	cli
 bf0:	de bf       	out	0x3e, r29	; 62
 bf2:	0f be       	out	0x3f, r0	; 63
 bf4:	cd bf       	out	0x3d, r28	; 61
 bf6:	ed 01       	movw	r28, r26
 bf8:	08 95       	ret

00000bfa <_exit>:
 bfa:	f8 94       	cli

00000bfc <__stop_program>:
 bfc:	ff cf       	rjmp	.-2      	; 0xbfc <__stop_program>
