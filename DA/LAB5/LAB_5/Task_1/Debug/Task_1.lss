
Task_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001e6  00800100  0000130e  000013a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000130e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  008002e6  008002e6  00001588  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001588  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001624  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001de3  00000000  00000000  0000173c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eed  00000000  00000000  0000351f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bf6  00000000  00000000  0000440c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  00005004  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000736  00000000  00000000  00005294  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000932  00000000  00000000  000059ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000062fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_1>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	12 e0       	ldi	r17, 0x02	; 2
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	ee e0       	ldi	r30, 0x0E	; 14
      c8:	f3 e1       	ldi	r31, 0x13	; 19
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	a6 3e       	cpi	r26, 0xE6	; 230
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	23 e0       	ldi	r18, 0x03	; 3
      d8:	a6 ee       	ldi	r26, 0xE6	; 230
      da:	b2 e0       	ldi	r27, 0x02	; 2
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	af 30       	cpi	r26, 0x0F	; 15
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 60 01 	call	0x2c0	; 0x2c0 <main>
      ea:	0c 94 85 09 	jmp	0x130a	; 0x130a <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <__vector_1>:
	}
}

//	Interrupt on IRQ pin
ISR(INT0_vect)
{
      f2:	1f 92       	push	r1
      f4:	0f 92       	push	r0
      f6:	0f b6       	in	r0, 0x3f	; 63
      f8:	0f 92       	push	r0
      fa:	11 24       	eor	r1, r1
      fc:	8f 93       	push	r24
	message_received = true;
      fe:	81 e0       	ldi	r24, 0x01	; 1
     100:	80 93 e7 02 	sts	0x02E7, r24	; 0x8002e7 <message_received>
}
     104:	8f 91       	pop	r24
     106:	0f 90       	pop	r0
     108:	0f be       	out	0x3f, r0	; 63
     10a:	0f 90       	pop	r0
     10c:	1f 90       	pop	r1
     10e:	18 95       	reti

00000110 <print_config>:

void print_config(void)
{
     110:	cf 93       	push	r28
     112:	df 93       	push	r29
     114:	1f 92       	push	r1
     116:	cd b7       	in	r28, 0x3d	; 61
     118:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
     11a:	86 e2       	ldi	r24, 0x26	; 38
     11c:	91 e0       	ldi	r25, 0x01	; 1
     11e:	0e 94 5d 06 	call	0xcba	; 0xcba <puts>
	printf("-------------------------------------------\n");
     122:	84 e5       	ldi	r24, 0x54	; 84
     124:	91 e0       	ldi	r25, 0x01	; 1
     126:	0e 94 5d 06 	call	0xcba	; 0xcba <puts>
	nrf24_read(CONFIG,&data,1);
     12a:	41 e0       	ldi	r20, 0x01	; 1
     12c:	50 e0       	ldi	r21, 0x00	; 0
     12e:	be 01       	movw	r22, r28
     130:	6f 5f       	subi	r22, 0xFF	; 255
     132:	7f 4f       	sbci	r23, 0xFF	; 255
     134:	80 e0       	ldi	r24, 0x00	; 0
     136:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	printf("CONFIG		0x%x\n",data);
     13a:	89 81       	ldd	r24, Y+1	; 0x01
     13c:	1f 92       	push	r1
     13e:	8f 93       	push	r24
     140:	80 e8       	ldi	r24, 0x80	; 128
     142:	91 e0       	ldi	r25, 0x01	; 1
     144:	9f 93       	push	r25
     146:	8f 93       	push	r24
     148:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	nrf24_read(EN_AA,&data,1);
     14c:	41 e0       	ldi	r20, 0x01	; 1
     14e:	50 e0       	ldi	r21, 0x00	; 0
     150:	be 01       	movw	r22, r28
     152:	6f 5f       	subi	r22, 0xFF	; 255
     154:	7f 4f       	sbci	r23, 0xFF	; 255
     156:	81 e0       	ldi	r24, 0x01	; 1
     158:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	printf("EN_AA			0x%x\n",data);
     15c:	89 81       	ldd	r24, Y+1	; 0x01
     15e:	1f 92       	push	r1
     160:	8f 93       	push	r24
     162:	8e e8       	ldi	r24, 0x8E	; 142
     164:	91 e0       	ldi	r25, 0x01	; 1
     166:	9f 93       	push	r25
     168:	8f 93       	push	r24
     16a:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	nrf24_read(EN_RXADDR,&data,1);
     16e:	41 e0       	ldi	r20, 0x01	; 1
     170:	50 e0       	ldi	r21, 0x00	; 0
     172:	be 01       	movw	r22, r28
     174:	6f 5f       	subi	r22, 0xFF	; 255
     176:	7f 4f       	sbci	r23, 0xFF	; 255
     178:	82 e0       	ldi	r24, 0x02	; 2
     17a:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	printf("EN_RXADDR		0x%x\n",data);
     17e:	89 81       	ldd	r24, Y+1	; 0x01
     180:	1f 92       	push	r1
     182:	8f 93       	push	r24
     184:	8c e9       	ldi	r24, 0x9C	; 156
     186:	91 e0       	ldi	r25, 0x01	; 1
     188:	9f 93       	push	r25
     18a:	8f 93       	push	r24
     18c:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	nrf24_read(SETUP_RETR,&data,1);
     190:	41 e0       	ldi	r20, 0x01	; 1
     192:	50 e0       	ldi	r21, 0x00	; 0
     194:	be 01       	movw	r22, r28
     196:	6f 5f       	subi	r22, 0xFF	; 255
     198:	7f 4f       	sbci	r23, 0xFF	; 255
     19a:	84 e0       	ldi	r24, 0x04	; 4
     19c:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	printf("SETUP_RETR		0x%x\n",data);
     1a0:	89 81       	ldd	r24, Y+1	; 0x01
     1a2:	1f 92       	push	r1
     1a4:	8f 93       	push	r24
     1a6:	8d ea       	ldi	r24, 0xAD	; 173
     1a8:	91 e0       	ldi	r25, 0x01	; 1
     1aa:	9f 93       	push	r25
     1ac:	8f 93       	push	r24
     1ae:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	nrf24_read(RF_CH,&data,1);
     1b2:	41 e0       	ldi	r20, 0x01	; 1
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	be 01       	movw	r22, r28
     1b8:	6f 5f       	subi	r22, 0xFF	; 255
     1ba:	7f 4f       	sbci	r23, 0xFF	; 255
     1bc:	85 e0       	ldi	r24, 0x05	; 5
     1be:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	printf("RF_CH			0x%x\n",data);
     1c2:	89 81       	ldd	r24, Y+1	; 0x01
     1c4:	1f 92       	push	r1
     1c6:	8f 93       	push	r24
     1c8:	8f eb       	ldi	r24, 0xBF	; 191
     1ca:	91 e0       	ldi	r25, 0x01	; 1
     1cc:	9f 93       	push	r25
     1ce:	8f 93       	push	r24
     1d0:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	nrf24_read(RF_SETUP,&data,1);
     1d4:	41 e0       	ldi	r20, 0x01	; 1
     1d6:	50 e0       	ldi	r21, 0x00	; 0
     1d8:	be 01       	movw	r22, r28
     1da:	6f 5f       	subi	r22, 0xFF	; 255
     1dc:	7f 4f       	sbci	r23, 0xFF	; 255
     1de:	86 e0       	ldi	r24, 0x06	; 6
     1e0:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	printf("RF_SETUP		0x%x\n",data);
     1e4:	89 81       	ldd	r24, Y+1	; 0x01
     1e6:	1f 92       	push	r1
     1e8:	8f 93       	push	r24
     1ea:	8d ec       	ldi	r24, 0xCD	; 205
     1ec:	91 e0       	ldi	r25, 0x01	; 1
     1ee:	9f 93       	push	r25
     1f0:	8f 93       	push	r24
     1f2:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	nrf24_read(STATUS,&data,1);
     1f6:	41 e0       	ldi	r20, 0x01	; 1
     1f8:	50 e0       	ldi	r21, 0x00	; 0
     1fa:	be 01       	movw	r22, r28
     1fc:	6f 5f       	subi	r22, 0xFF	; 255
     1fe:	7f 4f       	sbci	r23, 0xFF	; 255
     200:	87 e0       	ldi	r24, 0x07	; 7
     202:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	printf("STATUS		0x%x\n",data);
     206:	89 81       	ldd	r24, Y+1	; 0x01
     208:	1f 92       	push	r1
     20a:	8f 93       	push	r24
     20c:	8d ed       	ldi	r24, 0xDD	; 221
     20e:	91 e0       	ldi	r25, 0x01	; 1
     210:	9f 93       	push	r25
     212:	8f 93       	push	r24
     214:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	nrf24_read(FEATURE,&data,1);
     218:	41 e0       	ldi	r20, 0x01	; 1
     21a:	50 e0       	ldi	r21, 0x00	; 0
     21c:	be 01       	movw	r22, r28
     21e:	6f 5f       	subi	r22, 0xFF	; 255
     220:	7f 4f       	sbci	r23, 0xFF	; 255
     222:	8d e1       	ldi	r24, 0x1D	; 29
     224:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	printf("FEATURE		0x%x\n",data);
     228:	89 81       	ldd	r24, Y+1	; 0x01
     22a:	1f 92       	push	r1
     22c:	8f 93       	push	r24
     22e:	8b ee       	ldi	r24, 0xEB	; 235
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	9f 93       	push	r25
     234:	8f 93       	push	r24
     236:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	printf("-------------------------------------------\n\n");
     23a:	0f b6       	in	r0, 0x3f	; 63
     23c:	f8 94       	cli
     23e:	de bf       	out	0x3e, r29	; 62
     240:	0f be       	out	0x3f, r0	; 63
     242:	cd bf       	out	0x3d, r28	; 61
     244:	8a ef       	ldi	r24, 0xFA	; 250
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	0e 94 5d 06 	call	0xcba	; 0xcba <puts>
}
     24c:	0f 90       	pop	r0
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	08 95       	ret

00000254 <adc_init>:

void adc_init() 
{
		/** Setup and enable ADC **/
		ADMUX = 
     254:	84 e4       	ldi	r24, 0x44	; 68
     256:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
		(0<<ADLAR)|    // ADC Left Adjust Result
		(1<<MUX2)|     // Analog Channel Selection Bits
		(0<<MUX1)|     // ADC4 (PC4 PIN27)
		(0<<MUX0);
		
		ADCSRA = 
     25a:	85 e8       	ldi	r24, 0x85	; 133
     25c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     260:	08 95       	ret

00000262 <adc_getValue>:
		(1<<ADPS0);
}

int adc_getValue()
{
	ADCSRA|=(1<<ADSC);	//start conversion
     262:	ea e7       	ldi	r30, 0x7A	; 122
     264:	f0 e0       	ldi	r31, 0x00	; 0
     266:	80 81       	ld	r24, Z
     268:	80 64       	ori	r24, 0x40	; 64
     26a:	80 83       	st	Z, r24
	while((ADCSRA&(1<<ADIF))==0);//wait for conversion to finish
     26c:	80 81       	ld	r24, Z
     26e:	84 ff       	sbrs	r24, 4
     270:	fd cf       	rjmp	.-6      	; 0x26c <adc_getValue+0xa>
	
	ADCSRA |= (1<<ADIF);
     272:	ea e7       	ldi	r30, 0x7A	; 122
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	80 81       	ld	r24, Z
     278:	80 61       	ori	r24, 0x10	; 16
     27a:	80 83       	st	Z, r24
	int adcValue = ADCL;
     27c:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	adcValue = adcValue | (ADCH<<8);
     280:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	adcValue = (adcValue/1024.0) * 5000/10;	//finish properly formatting tempC value
     284:	70 e0       	ldi	r23, 0x00	; 0
     286:	78 2b       	or	r23, r24
     288:	07 2e       	mov	r0, r23
     28a:	00 0c       	add	r0, r0
     28c:	88 0b       	sbc	r24, r24
     28e:	99 0b       	sbc	r25, r25
     290:	0e 94 47 05 	call	0xa8e	; 0xa8e <__floatsisf>
     294:	20 e0       	ldi	r18, 0x00	; 0
     296:	30 e0       	ldi	r19, 0x00	; 0
     298:	40 e8       	ldi	r20, 0x80	; 128
     29a:	5a e3       	ldi	r21, 0x3A	; 58
     29c:	0e 94 d3 05 	call	0xba6	; 0xba6 <__mulsf3>
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e4       	ldi	r19, 0x40	; 64
     2a4:	4c e9       	ldi	r20, 0x9C	; 156
     2a6:	55 e4       	ldi	r21, 0x45	; 69
     2a8:	0e 94 d3 05 	call	0xba6	; 0xba6 <__mulsf3>
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	40 e2       	ldi	r20, 0x20	; 32
     2b2:	51 e4       	ldi	r21, 0x41	; 65
     2b4:	0e 94 9d 04 	call	0x93a	; 0x93a <__divsf3>
	
	return adcValue;
     2b8:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__fixsfsi>
     2bc:	cb 01       	movw	r24, r22
     2be:	08 95       	ret

000002c0 <main>:
//setup ADC
void adc_init();
int adc_getValue();

int main(void)
{	
     2c0:	cf 93       	push	r28
     2c2:	df 93       	push	r29
     2c4:	cd b7       	in	r28, 0x3d	; 61
     2c6:	de b7       	in	r29, 0x3e	; 62
     2c8:	a0 97       	sbiw	r28, 0x20	; 32
     2ca:	0f b6       	in	r0, 0x3f	; 63
     2cc:	f8 94       	cli
     2ce:	de bf       	out	0x3e, r29	; 62
     2d0:	0f be       	out	0x3f, r0	; 63
     2d2:	cd bf       	out	0x3d, r28	; 61
	//	Set cliche message to send (message cannot exceed 32 characters)
	char tx_message[32];				// Define string array
	strcpy(tx_message,"Hello from the Other Side!");	// Copy string into array
     2d4:	8b e1       	ldi	r24, 0x1B	; 27
     2d6:	e7 e2       	ldi	r30, 0x27	; 39
     2d8:	f2 e0       	ldi	r31, 0x02	; 2
     2da:	de 01       	movw	r26, r28
     2dc:	11 96       	adiw	r26, 0x01	; 1
     2de:	01 90       	ld	r0, Z+
     2e0:	0d 92       	st	X+, r0
     2e2:	8a 95       	dec	r24
     2e4:	e1 f7       	brne	.-8      	; 0x2de <main+0x1e>
	
	//	Initialize UART
	uart_init();
     2e6:	0e 94 8a 04 	call	0x914	; 0x914 <uart_init>
	
	//	Initialize ADC and test
	adc_init();	//Set up ADC
     2ea:	0e 94 2a 01 	call	0x254	; 0x254 <adc_init>
	printf("Testing ADC, Temperature is: %d Celsius\n\n",adc_getValue());
     2ee:	0e 94 31 01 	call	0x262	; 0x262 <adc_getValue>
     2f2:	9f 93       	push	r25
     2f4:	8f 93       	push	r24
     2f6:	82 e4       	ldi	r24, 0x42	; 66
     2f8:	92 e0       	ldi	r25, 0x02	; 2
     2fa:	9f 93       	push	r25
     2fc:	8f 93       	push	r24
     2fe:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	
	//	Initialize nRF24L01+ and print configuration info
	nrf24_init();
     302:	0e 94 35 02 	call	0x46a	; 0x46a <nrf24_init>
	print_config();
     306:	0e 94 88 00 	call	0x110	; 0x110 <print_config>
	
	//	Start listening to incoming messages
	nrf24_start_listening();
     30a:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <nrf24_start_listening>
	status = nrf24_send_message(tx_message);
     30e:	ce 01       	movw	r24, r28
     310:	01 96       	adiw	r24, 0x01	; 1
     312:	0e 94 65 03 	call	0x6ca	; 0x6ca <nrf24_send_message>
     316:	91 e0       	ldi	r25, 0x01	; 1
     318:	0f 90       	pop	r0
     31a:	0f 90       	pop	r0
     31c:	0f 90       	pop	r0
     31e:	0f 90       	pop	r0
     320:	81 11       	cpse	r24, r1
     322:	01 c0       	rjmp	.+2      	; 0x326 <main+0x66>
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	90 93 e6 02 	sts	0x02E6, r25	; 0x8002e6 <__data_end>
		if (status == true) printf("Connection Established\n");
     32a:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <__data_end>
     32e:	88 23       	and	r24, r24
     330:	21 f0       	breq	.+8      	; 0x33a <main+0x7a>
     332:	8c e6       	ldi	r24, 0x6C	; 108
     334:	92 e0       	ldi	r25, 0x02	; 2
     336:	0e 94 5d 06 	call	0xcba	; 0xcba <puts>
	
	while (1)
	{
		snprintf(tx_message, sizeof(tx_message), "Temp value from Geo: %d Celsius", adc_getValue());
     33a:	03 e8       	ldi	r16, 0x83	; 131
     33c:	12 e0       	ldi	r17, 0x02	; 2
     33e:	68 94       	set
     340:	99 24       	eor	r9, r9
     342:	95 f8       	bld	r9, 5
     344:	9e 01       	movw	r18, r28
     346:	2f 5f       	subi	r18, 0xFF	; 255
     348:	3f 4f       	sbci	r19, 0xFF	; 255
     34a:	79 01       	movw	r14, r18
			status = nrf24_send_message(tx_message);
     34c:	55 24       	eor	r5, r5
     34e:	53 94       	inc	r5
     350:	61 2c       	mov	r6, r1
		if (message_received)
		{
			//	Message received, print it
			message_received = false;
			printf("Received message: %s\n",nrf24_read_message());
     352:	0f 2e       	mov	r0, r31
     354:	f3 ea       	ldi	r31, 0xA3	; 163
     356:	af 2e       	mov	r10, r31
     358:	f2 e0       	ldi	r31, 0x02	; 2
     35a:	bf 2e       	mov	r11, r31
     35c:	f0 2d       	mov	r31, r0
	status = nrf24_send_message(tx_message);
		if (status == true) printf("Connection Established\n");
	
	while (1)
	{
		snprintf(tx_message, sizeof(tx_message), "Temp value from Geo: %d Celsius", adc_getValue());
     35e:	c2 2e       	mov	r12, r18
     360:	df 2c       	mov	r13, r15
			status = nrf24_send_message(tx_message);
     362:	85 2c       	mov	r8, r5
     364:	76 2c       	mov	r7, r6
	status = nrf24_send_message(tx_message);
		if (status == true) printf("Connection Established\n");
	
	while (1)
	{
		snprintf(tx_message, sizeof(tx_message), "Temp value from Geo: %d Celsius", adc_getValue());
     366:	0e 94 31 01 	call	0x262	; 0x262 <adc_getValue>
     36a:	9f 93       	push	r25
     36c:	8f 93       	push	r24
     36e:	1f 93       	push	r17
     370:	0f 93       	push	r16
     372:	1f 92       	push	r1
     374:	9f 92       	push	r9
     376:	ff 92       	push	r15
     378:	ef 92       	push	r14
     37a:	0e 94 8d 06 	call	0xd1a	; 0xd1a <snprintf>
			status = nrf24_send_message(tx_message);
     37e:	8c 2d       	mov	r24, r12
     380:	9d 2d       	mov	r25, r13
     382:	0e 94 65 03 	call	0x6ca	; 0x6ca <nrf24_send_message>
     386:	98 2d       	mov	r25, r8
     388:	0f b6       	in	r0, 0x3f	; 63
     38a:	f8 94       	cli
     38c:	de bf       	out	0x3e, r29	; 62
     38e:	0f be       	out	0x3f, r0	; 63
     390:	cd bf       	out	0x3d, r28	; 61
     392:	81 11       	cpse	r24, r1
     394:	01 c0       	rjmp	.+2      	; 0x398 <main+0xd8>
     396:	97 2d       	mov	r25, r7
     398:	90 93 e6 02 	sts	0x02E6, r25	; 0x8002e6 <__data_end>
		if (message_received)
     39c:	80 91 e7 02 	lds	r24, 0x02E7	; 0x8002e7 <message_received>
     3a0:	88 23       	and	r24, r24
     3a2:	09 f3       	breq	.-62     	; 0x366 <main+0xa6>
		{
			//	Message received, print it
			message_received = false;
     3a4:	60 92 e7 02 	sts	0x02E7, r6	; 0x8002e7 <message_received>
			printf("Received message: %s\n",nrf24_read_message());
     3a8:	0e 94 22 04 	call	0x844	; 0x844 <nrf24_read_message>
     3ac:	9f 93       	push	r25
     3ae:	8f 93       	push	r24
     3b0:	bf 92       	push	r11
     3b2:	af 92       	push	r10
     3b4:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b8:	3f ef       	ldi	r19, 0xFF	; 255
     3ba:	89 e6       	ldi	r24, 0x69	; 105
     3bc:	98 e1       	ldi	r25, 0x18	; 24
     3be:	31 50       	subi	r19, 0x01	; 1
     3c0:	80 40       	sbci	r24, 0x00	; 0
     3c2:	90 40       	sbci	r25, 0x00	; 0
     3c4:	e1 f7       	brne	.-8      	; 0x3be <main+0xfe>
     3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <main+0x108>
     3c8:	00 00       	nop
			//	Send message as response
			_delay_ms(500);
			//Perform ADC and store in tx_message
			snprintf(tx_message, sizeof(tx_message), "Temp value from Geo: %d Celsius", adc_getValue());
     3ca:	0e 94 31 01 	call	0x262	; 0x262 <adc_getValue>
     3ce:	9f 93       	push	r25
     3d0:	8f 93       	push	r24
     3d2:	1f 93       	push	r17
     3d4:	0f 93       	push	r16
     3d6:	1f 92       	push	r1
     3d8:	9f 92       	push	r9
     3da:	ff 92       	push	r15
     3dc:	ef 92       	push	r14
     3de:	0e 94 8d 06 	call	0xd1a	; 0xd1a <snprintf>
			status = nrf24_send_message(tx_message);
     3e2:	8c 2d       	mov	r24, r12
     3e4:	9d 2d       	mov	r25, r13
     3e6:	0e 94 65 03 	call	0x6ca	; 0x6ca <nrf24_send_message>
     3ea:	95 2d       	mov	r25, r5
     3ec:	0f b6       	in	r0, 0x3f	; 63
     3ee:	f8 94       	cli
     3f0:	de bf       	out	0x3e, r29	; 62
     3f2:	0f be       	out	0x3f, r0	; 63
     3f4:	cd bf       	out	0x3d, r28	; 61
     3f6:	81 11       	cpse	r24, r1
     3f8:	01 c0       	rjmp	.+2      	; 0x3fc <main+0x13c>
     3fa:	96 2d       	mov	r25, r6
     3fc:	90 93 e6 02 	sts	0x02E6, r25	; 0x8002e6 <__data_end>
			if (status == true) printf("Message Transmitted\n");
     400:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <__data_end>
     404:	88 23       	and	r24, r24
     406:	09 f4       	brne	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     408:	ae cf       	rjmp	.-164    	; 0x366 <main+0xa6>
     40a:	89 eb       	ldi	r24, 0xB9	; 185
     40c:	92 e0       	ldi	r25, 0x02	; 2
     40e:	0e 94 5d 06 	call	0xcba	; 0xcba <puts>
     412:	a9 cf       	rjmp	.-174    	; 0x366 <main+0xa6>

00000414 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
     414:	df 92       	push	r13
     416:	ef 92       	push	r14
     418:	ff 92       	push	r15
     41a:	0f 93       	push	r16
     41c:	1f 93       	push	r17
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	7b 01       	movw	r14, r22
     424:	8a 01       	movw	r16, r20
     426:	2a 98       	cbi	0x05, 2	; 5
     428:	0e 94 69 04 	call	0x8d2	; 0x8d2 <spi_exchange>
     42c:	d8 2e       	mov	r13, r24
     42e:	01 15       	cp	r16, r1
     430:	11 05       	cpc	r17, r1
     432:	51 f0       	breq	.+20     	; 0x448 <nrf24_send_spi+0x34>
     434:	e7 01       	movw	r28, r14
     436:	0e 0d       	add	r16, r14
     438:	1f 1d       	adc	r17, r15
     43a:	88 81       	ld	r24, Y
     43c:	0e 94 69 04 	call	0x8d2	; 0x8d2 <spi_exchange>
     440:	89 93       	st	Y+, r24
     442:	c0 17       	cp	r28, r16
     444:	d1 07       	cpc	r29, r17
     446:	c9 f7       	brne	.-14     	; 0x43a <nrf24_send_spi+0x26>
     448:	2a 9a       	sbi	0x05, 2	; 5
     44a:	8d 2d       	mov	r24, r13
     44c:	df 91       	pop	r29
     44e:	cf 91       	pop	r28
     450:	1f 91       	pop	r17
     452:	0f 91       	pop	r16
     454:	ff 90       	pop	r15
     456:	ef 90       	pop	r14
     458:	df 90       	pop	r13
     45a:	08 95       	ret

0000045c <nrf24_write>:
     45c:	80 62       	ori	r24, 0x20	; 32
     45e:	0e 94 0a 02 	call	0x414	; 0x414 <nrf24_send_spi>
     462:	08 95       	ret

00000464 <nrf24_read>:
     464:	0e 94 0a 02 	call	0x414	; 0x414 <nrf24_send_spi>
     468:	08 95       	ret

0000046a <nrf24_init>:
     46a:	0f 93       	push	r16
     46c:	1f 93       	push	r17
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29
     472:	1f 92       	push	r1
     474:	cd b7       	in	r28, 0x3d	; 61
     476:	de b7       	in	r29, 0x3e	; 62
     478:	f8 94       	cli
     47a:	e9 e6       	ldi	r30, 0x69	; 105
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	80 81       	ld	r24, Z
     480:	82 60       	ori	r24, 0x02	; 2
     482:	80 83       	st	Z, r24
     484:	e8 9a       	sbi	0x1d, 0	; 29
     486:	78 94       	sei
     488:	21 9a       	sbi	0x04, 1	; 4
     48a:	22 9a       	sbi	0x04, 2	; 4
     48c:	2a 9a       	sbi	0x05, 2	; 5
     48e:	29 98       	cbi	0x05, 1	; 5
     490:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <spi_master_init>
     494:	2f ef       	ldi	r18, 0xFF	; 255
     496:	81 ee       	ldi	r24, 0xE1	; 225
     498:	94 e0       	ldi	r25, 0x04	; 4
     49a:	21 50       	subi	r18, 0x01	; 1
     49c:	80 40       	sbci	r24, 0x00	; 0
     49e:	90 40       	sbci	r25, 0x00	; 0
     4a0:	e1 f7       	brne	.-8      	; 0x49a <nrf24_init+0x30>
     4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <nrf24_init+0x3a>
     4a4:	00 00       	nop
     4a6:	0f e3       	ldi	r16, 0x3F	; 63
     4a8:	00 93 08 03 	sts	0x0308, r16	; 0x800308 <data>
     4ac:	41 e0       	ldi	r20, 0x01	; 1
     4ae:	50 e0       	ldi	r21, 0x00	; 0
     4b0:	68 e0       	ldi	r22, 0x08	; 8
     4b2:	73 e0       	ldi	r23, 0x03	; 3
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     4ba:	10 92 08 03 	sts	0x0308, r1	; 0x800308 <data>
     4be:	41 e0       	ldi	r20, 0x01	; 1
     4c0:	50 e0       	ldi	r21, 0x00	; 0
     4c2:	68 e0       	ldi	r22, 0x08	; 8
     4c4:	73 e0       	ldi	r23, 0x03	; 3
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     4cc:	80 ef       	ldi	r24, 0xF0	; 240
     4ce:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     4d2:	41 e0       	ldi	r20, 0x01	; 1
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	68 e0       	ldi	r22, 0x08	; 8
     4d8:	73 e0       	ldi	r23, 0x03	; 3
     4da:	84 e0       	ldi	r24, 0x04	; 4
     4dc:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     4e0:	10 92 08 03 	sts	0x0308, r1	; 0x800308 <data>
     4e4:	41 e0       	ldi	r20, 0x01	; 1
     4e6:	50 e0       	ldi	r21, 0x00	; 0
     4e8:	68 e0       	ldi	r22, 0x08	; 8
     4ea:	73 e0       	ldi	r23, 0x03	; 3
     4ec:	82 e0       	ldi	r24, 0x02	; 2
     4ee:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     4f2:	84 e7       	ldi	r24, 0x74	; 116
     4f4:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     4f8:	41 e0       	ldi	r20, 0x01	; 1
     4fa:	50 e0       	ldi	r21, 0x00	; 0
     4fc:	68 e0       	ldi	r22, 0x08	; 8
     4fe:	73 e0       	ldi	r23, 0x03	; 3
     500:	85 e0       	ldi	r24, 0x05	; 5
     502:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     506:	8e e0       	ldi	r24, 0x0E	; 14
     508:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     50c:	41 e0       	ldi	r20, 0x01	; 1
     50e:	50 e0       	ldi	r21, 0x00	; 0
     510:	68 e0       	ldi	r22, 0x08	; 8
     512:	73 e0       	ldi	r23, 0x03	; 3
     514:	86 e0       	ldi	r24, 0x06	; 6
     516:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     51a:	10 e7       	ldi	r17, 0x70	; 112
     51c:	10 93 08 03 	sts	0x0308, r17	; 0x800308 <data>
     520:	41 e0       	ldi	r20, 0x01	; 1
     522:	50 e0       	ldi	r21, 0x00	; 0
     524:	68 e0       	ldi	r22, 0x08	; 8
     526:	73 e0       	ldi	r23, 0x03	; 3
     528:	87 e0       	ldi	r24, 0x07	; 7
     52a:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     52e:	00 93 08 03 	sts	0x0308, r16	; 0x800308 <data>
     532:	41 e0       	ldi	r20, 0x01	; 1
     534:	50 e0       	ldi	r21, 0x00	; 0
     536:	68 e0       	ldi	r22, 0x08	; 8
     538:	73 e0       	ldi	r23, 0x03	; 3
     53a:	8c e1       	ldi	r24, 0x1C	; 28
     53c:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     540:	84 e0       	ldi	r24, 0x04	; 4
     542:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     546:	41 e0       	ldi	r20, 0x01	; 1
     548:	50 e0       	ldi	r21, 0x00	; 0
     54a:	68 e0       	ldi	r22, 0x08	; 8
     54c:	73 e0       	ldi	r23, 0x03	; 3
     54e:	8d e1       	ldi	r24, 0x1D	; 29
     550:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     554:	19 83       	std	Y+1, r17	; 0x01
     556:	40 e0       	ldi	r20, 0x00	; 0
     558:	50 e0       	ldi	r21, 0x00	; 0
     55a:	60 e0       	ldi	r22, 0x00	; 0
     55c:	70 e0       	ldi	r23, 0x00	; 0
     55e:	82 ee       	ldi	r24, 0xE2	; 226
     560:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     564:	40 e0       	ldi	r20, 0x00	; 0
     566:	50 e0       	ldi	r21, 0x00	; 0
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	70 e0       	ldi	r23, 0x00	; 0
     56c:	81 ee       	ldi	r24, 0xE1	; 225
     56e:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     572:	45 e0       	ldi	r20, 0x05	; 5
     574:	50 e0       	ldi	r21, 0x00	; 0
     576:	65 e0       	ldi	r22, 0x05	; 5
     578:	71 e0       	ldi	r23, 0x01	; 1
     57a:	8a e0       	ldi	r24, 0x0A	; 10
     57c:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     580:	45 e0       	ldi	r20, 0x05	; 5
     582:	50 e0       	ldi	r21, 0x00	; 0
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	71 e0       	ldi	r23, 0x01	; 1
     588:	80 e1       	ldi	r24, 0x10	; 16
     58a:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     58e:	41 e0       	ldi	r20, 0x01	; 1
     590:	50 e0       	ldi	r21, 0x00	; 0
     592:	be 01       	movw	r22, r28
     594:	6f 5f       	subi	r22, 0xFF	; 255
     596:	7f 4f       	sbci	r23, 0xFF	; 255
     598:	82 e0       	ldi	r24, 0x02	; 2
     59a:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     59e:	89 81       	ldd	r24, Y+1	; 0x01
     5a0:	81 60       	ori	r24, 0x01	; 1
     5a2:	89 83       	std	Y+1, r24	; 0x01
     5a4:	41 e0       	ldi	r20, 0x01	; 1
     5a6:	50 e0       	ldi	r21, 0x00	; 0
     5a8:	be 01       	movw	r22, r28
     5aa:	6f 5f       	subi	r22, 0xFF	; 255
     5ac:	7f 4f       	sbci	r23, 0xFF	; 255
     5ae:	82 e0       	ldi	r24, 0x02	; 2
     5b0:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     5b4:	0f 90       	pop	r0
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	1f 91       	pop	r17
     5bc:	0f 91       	pop	r16
     5be:	08 95       	ret

000005c0 <nrf24_state>:
     5c0:	1f 93       	push	r17
     5c2:	cf 93       	push	r28
     5c4:	df 93       	push	r29
     5c6:	1f 92       	push	r1
     5c8:	cd b7       	in	r28, 0x3d	; 61
     5ca:	de b7       	in	r29, 0x3e	; 62
     5cc:	18 2f       	mov	r17, r24
     5ce:	41 e0       	ldi	r20, 0x01	; 1
     5d0:	50 e0       	ldi	r21, 0x00	; 0
     5d2:	be 01       	movw	r22, r28
     5d4:	6f 5f       	subi	r22, 0xFF	; 255
     5d6:	7f 4f       	sbci	r23, 0xFF	; 255
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
     5de:	13 30       	cpi	r17, 0x03	; 3
     5e0:	71 f1       	breq	.+92     	; 0x63e <nrf24_state+0x7e>
     5e2:	28 f4       	brcc	.+10     	; 0x5ee <nrf24_state+0x2e>
     5e4:	11 30       	cpi	r17, 0x01	; 1
     5e6:	59 f0       	breq	.+22     	; 0x5fe <nrf24_state+0x3e>
     5e8:	12 30       	cpi	r17, 0x02	; 2
     5ea:	e9 f0       	breq	.+58     	; 0x626 <nrf24_state+0x66>
     5ec:	5e c0       	rjmp	.+188    	; 0x6aa <nrf24_state+0xea>
     5ee:	15 30       	cpi	r17, 0x05	; 5
     5f0:	09 f4       	brne	.+2      	; 0x5f4 <nrf24_state+0x34>
     5f2:	47 c0       	rjmp	.+142    	; 0x682 <nrf24_state+0xc2>
     5f4:	d0 f1       	brcs	.+116    	; 0x66a <nrf24_state+0xaa>
     5f6:	16 30       	cpi	r17, 0x06	; 6
     5f8:	09 f4       	brne	.+2      	; 0x5fc <nrf24_state+0x3c>
     5fa:	45 c0       	rjmp	.+138    	; 0x686 <nrf24_state+0xc6>
     5fc:	56 c0       	rjmp	.+172    	; 0x6aa <nrf24_state+0xea>
     5fe:	89 81       	ldd	r24, Y+1	; 0x01
     600:	81 fd       	sbrc	r24, 1
     602:	53 c0       	rjmp	.+166    	; 0x6aa <nrf24_state+0xea>
     604:	82 60       	ori	r24, 0x02	; 2
     606:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     60a:	41 e0       	ldi	r20, 0x01	; 1
     60c:	50 e0       	ldi	r21, 0x00	; 0
     60e:	68 e0       	ldi	r22, 0x08	; 8
     610:	73 e0       	ldi	r23, 0x03	; 3
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     618:	8f e3       	ldi	r24, 0x3F	; 63
     61a:	9f e1       	ldi	r25, 0x1F	; 31
     61c:	01 97       	sbiw	r24, 0x01	; 1
     61e:	f1 f7       	brne	.-4      	; 0x61c <nrf24_state+0x5c>
     620:	00 c0       	rjmp	.+0      	; 0x622 <nrf24_state+0x62>
     622:	00 00       	nop
     624:	42 c0       	rjmp	.+132    	; 0x6aa <nrf24_state+0xea>
     626:	89 81       	ldd	r24, Y+1	; 0x01
     628:	8d 7f       	andi	r24, 0xFD	; 253
     62a:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     62e:	41 e0       	ldi	r20, 0x01	; 1
     630:	50 e0       	ldi	r21, 0x00	; 0
     632:	68 e0       	ldi	r22, 0x08	; 8
     634:	73 e0       	ldi	r23, 0x03	; 3
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     63c:	36 c0       	rjmp	.+108    	; 0x6aa <nrf24_state+0xea>
     63e:	89 81       	ldd	r24, Y+1	; 0x01
     640:	81 60       	ori	r24, 0x01	; 1
     642:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     646:	41 e0       	ldi	r20, 0x01	; 1
     648:	50 e0       	ldi	r21, 0x00	; 0
     64a:	68 e0       	ldi	r22, 0x08	; 8
     64c:	73 e0       	ldi	r23, 0x03	; 3
     64e:	80 e0       	ldi	r24, 0x00	; 0
     650:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     654:	80 e7       	ldi	r24, 0x70	; 112
     656:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     65a:	41 e0       	ldi	r20, 0x01	; 1
     65c:	50 e0       	ldi	r21, 0x00	; 0
     65e:	68 e0       	ldi	r22, 0x08	; 8
     660:	73 e0       	ldi	r23, 0x03	; 3
     662:	87 e0       	ldi	r24, 0x07	; 7
     664:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     668:	20 c0       	rjmp	.+64     	; 0x6aa <nrf24_state+0xea>
     66a:	89 81       	ldd	r24, Y+1	; 0x01
     66c:	8e 7f       	andi	r24, 0xFE	; 254
     66e:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     672:	41 e0       	ldi	r20, 0x01	; 1
     674:	50 e0       	ldi	r21, 0x00	; 0
     676:	68 e0       	ldi	r22, 0x08	; 8
     678:	73 e0       	ldi	r23, 0x03	; 3
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     680:	14 c0       	rjmp	.+40     	; 0x6aa <nrf24_state+0xea>
     682:	29 98       	cbi	0x05, 1	; 5
     684:	12 c0       	rjmp	.+36     	; 0x6aa <nrf24_state+0xea>
     686:	89 81       	ldd	r24, Y+1	; 0x01
     688:	8e 7f       	andi	r24, 0xFE	; 254
     68a:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     68e:	41 e0       	ldi	r20, 0x01	; 1
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	68 e0       	ldi	r22, 0x08	; 8
     694:	73 e0       	ldi	r23, 0x03	; 3
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     69c:	29 9a       	sbi	0x05, 1	; 5
     69e:	87 e5       	ldi	r24, 0x57	; 87
     6a0:	92 e0       	ldi	r25, 0x02	; 2
     6a2:	01 97       	sbiw	r24, 0x01	; 1
     6a4:	f1 f7       	brne	.-4      	; 0x6a2 <nrf24_state+0xe2>
     6a6:	00 c0       	rjmp	.+0      	; 0x6a8 <nrf24_state+0xe8>
     6a8:	00 00       	nop
     6aa:	0f 90       	pop	r0
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	1f 91       	pop	r17
     6b2:	08 95       	ret

000006b4 <nrf24_start_listening>:
     6b4:	83 e0       	ldi	r24, 0x03	; 3
     6b6:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <nrf24_state>
     6ba:	29 9a       	sbi	0x05, 1	; 5
     6bc:	87 e5       	ldi	r24, 0x57	; 87
     6be:	92 e0       	ldi	r25, 0x02	; 2
     6c0:	01 97       	sbiw	r24, 0x01	; 1
     6c2:	f1 f7       	brne	.-4      	; 0x6c0 <nrf24_start_listening+0xc>
     6c4:	00 c0       	rjmp	.+0      	; 0x6c6 <nrf24_start_listening+0x12>
     6c6:	00 00       	nop
     6c8:	08 95       	ret

000006ca <nrf24_send_message>:
     6ca:	cf 92       	push	r12
     6cc:	df 92       	push	r13
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	0f 93       	push	r16
     6d4:	1f 93       	push	r17
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	cd b7       	in	r28, 0x3d	; 61
     6dc:	de b7       	in	r29, 0x3e	; 62
     6de:	a0 97       	sbiw	r28, 0x20	; 32
     6e0:	0f b6       	in	r0, 0x3f	; 63
     6e2:	f8 94       	cli
     6e4:	de bf       	out	0x3e, r29	; 62
     6e6:	0f be       	out	0x3f, r0	; 63
     6e8:	cd bf       	out	0x3d, r28	; 61
     6ea:	6c 01       	movw	r12, r24
     6ec:	68 94       	set
     6ee:	ff 24       	eor	r15, r15
     6f0:	f5 f8       	bld	r15, 5
     6f2:	ce 01       	movw	r24, r28
     6f4:	01 96       	adiw	r24, 0x01	; 1
     6f6:	fc 01       	movw	r30, r24
     6f8:	2f 2d       	mov	r18, r15
     6fa:	11 92       	st	Z+, r1
     6fc:	2a 95       	dec	r18
     6fe:	e9 f7       	brne	.-6      	; 0x6fa <nrf24_send_message+0x30>
     700:	b6 01       	movw	r22, r12
     702:	0e 94 40 06 	call	0xc80	; 0xc80 <strcpy>
     706:	f6 01       	movw	r30, r12
     708:	01 90       	ld	r0, Z+
     70a:	00 20       	and	r0, r0
     70c:	e9 f7       	brne	.-6      	; 0x708 <nrf24_send_message+0x3e>
     70e:	31 97       	sbiw	r30, 0x01	; 1
     710:	8f 01       	movw	r16, r30
     712:	0c 19       	sub	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	84 e0       	ldi	r24, 0x04	; 4
     718:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <nrf24_state>
     71c:	40 e0       	ldi	r20, 0x00	; 0
     71e:	50 e0       	ldi	r21, 0x00	; 0
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	70 e0       	ldi	r23, 0x00	; 0
     724:	82 ee       	ldi	r24, 0xE2	; 226
     726:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     72a:	40 e0       	ldi	r20, 0x00	; 0
     72c:	50 e0       	ldi	r21, 0x00	; 0
     72e:	60 e0       	ldi	r22, 0x00	; 0
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	81 ee       	ldi	r24, 0xE1	; 225
     734:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     738:	f0 92 08 03 	sts	0x0308, r15	; 0x800308 <data>
     73c:	41 e0       	ldi	r20, 0x01	; 1
     73e:	50 e0       	ldi	r21, 0x00	; 0
     740:	68 e0       	ldi	r22, 0x08	; 8
     742:	73 e0       	ldi	r23, 0x03	; 3
     744:	87 e0       	ldi	r24, 0x07	; 7
     746:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     74a:	41 e0       	ldi	r20, 0x01	; 1
     74c:	50 e0       	ldi	r21, 0x00	; 0
     74e:	68 e0       	ldi	r22, 0x08	; 8
     750:	73 e0       	ldi	r23, 0x03	; 3
     752:	80 e0       	ldi	r24, 0x00	; 0
     754:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
     758:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <data>
     75c:	80 64       	ori	r24, 0x40	; 64
     75e:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     762:	41 e0       	ldi	r20, 0x01	; 1
     764:	50 e0       	ldi	r21, 0x00	; 0
     766:	68 e0       	ldi	r22, 0x08	; 8
     768:	73 e0       	ldi	r23, 0x03	; 3
     76a:	80 e0       	ldi	r24, 0x00	; 0
     76c:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     770:	2a 98       	cbi	0x05, 2	; 5
     772:	80 eb       	ldi	r24, 0xB0	; 176
     774:	0e 94 64 04 	call	0x8c8	; 0x8c8 <spi_send>
     778:	ef ef       	ldi	r30, 0xFF	; 255
     77a:	e0 0f       	add	r30, r16
     77c:	00 23       	and	r16, r16
     77e:	81 f0       	breq	.+32     	; 0x7a0 <nrf24_send_message+0xd6>
     780:	86 01       	movw	r16, r12
     782:	ee 2e       	mov	r14, r30
     784:	f1 2c       	mov	r15, r1
     786:	f7 01       	movw	r30, r14
     788:	31 96       	adiw	r30, 0x01	; 1
     78a:	76 01       	movw	r14, r12
     78c:	ee 0e       	add	r14, r30
     78e:	ff 1e       	adc	r15, r31
     790:	f8 01       	movw	r30, r16
     792:	81 91       	ld	r24, Z+
     794:	8f 01       	movw	r16, r30
     796:	0e 94 64 04 	call	0x8c8	; 0x8c8 <spi_send>
     79a:	0e 15       	cp	r16, r14
     79c:	1f 05       	cpc	r17, r15
     79e:	c1 f7       	brne	.-16     	; 0x790 <nrf24_send_message+0xc6>
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	0e 94 64 04 	call	0x8c8	; 0x8c8 <spi_send>
     7a6:	2a 9a       	sbi	0x05, 2	; 5
     7a8:	29 9a       	sbi	0x05, 1	; 5
     7aa:	f0 e5       	ldi	r31, 0x50	; 80
     7ac:	fa 95       	dec	r31
     7ae:	f1 f7       	brne	.-4      	; 0x7ac <nrf24_send_message+0xe2>
     7b0:	29 98       	cbi	0x05, 1	; 5
     7b2:	41 e0       	ldi	r20, 0x01	; 1
     7b4:	50 e0       	ldi	r21, 0x00	; 0
     7b6:	68 e0       	ldi	r22, 0x08	; 8
     7b8:	73 e0       	ldi	r23, 0x03	; 3
     7ba:	87 e0       	ldi	r24, 0x07	; 7
     7bc:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
     7c0:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <data>
     7c4:	85 fd       	sbrc	r24, 5
     7c6:	0b c0       	rjmp	.+22     	; 0x7de <nrf24_send_message+0x114>
     7c8:	41 e0       	ldi	r20, 0x01	; 1
     7ca:	50 e0       	ldi	r21, 0x00	; 0
     7cc:	68 e0       	ldi	r22, 0x08	; 8
     7ce:	73 e0       	ldi	r23, 0x03	; 3
     7d0:	87 e0       	ldi	r24, 0x07	; 7
     7d2:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
     7d6:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <data>
     7da:	85 ff       	sbrs	r24, 5
     7dc:	f5 cf       	rjmp	.-22     	; 0x7c8 <nrf24_send_message+0xfe>
     7de:	ce 01       	movw	r24, r28
     7e0:	01 96       	adiw	r24, 0x01	; 1
     7e2:	9f 93       	push	r25
     7e4:	8f 93       	push	r24
     7e6:	8d ec       	ldi	r24, 0xCD	; 205
     7e8:	92 e0       	ldi	r25, 0x02	; 2
     7ea:	9f 93       	push	r25
     7ec:	8f 93       	push	r24
     7ee:	0e 94 47 06 	call	0xc8e	; 0xc8e <printf>
     7f2:	41 e0       	ldi	r20, 0x01	; 1
     7f4:	50 e0       	ldi	r21, 0x00	; 0
     7f6:	68 e0       	ldi	r22, 0x08	; 8
     7f8:	73 e0       	ldi	r23, 0x03	; 3
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
     800:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <data>
     804:	8f 7b       	andi	r24, 0xBF	; 191
     806:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
     80a:	41 e0       	ldi	r20, 0x01	; 1
     80c:	50 e0       	ldi	r21, 0x00	; 0
     80e:	68 e0       	ldi	r22, 0x08	; 8
     810:	73 e0       	ldi	r23, 0x03	; 3
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
     818:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <nrf24_start_listening>
     81c:	0f 90       	pop	r0
     81e:	0f 90       	pop	r0
     820:	0f 90       	pop	r0
     822:	0f 90       	pop	r0
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	a0 96       	adiw	r28, 0x20	; 32
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	f8 94       	cli
     82c:	de bf       	out	0x3e, r29	; 62
     82e:	0f be       	out	0x3f, r0	; 63
     830:	cd bf       	out	0x3d, r28	; 61
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	1f 91       	pop	r17
     838:	0f 91       	pop	r16
     83a:	ff 90       	pop	r15
     83c:	ef 90       	pop	r14
     83e:	df 90       	pop	r13
     840:	cf 90       	pop	r12
     842:	08 95       	ret

00000844 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
     844:	80 e2       	ldi	r24, 0x20	; 32
     846:	e8 ee       	ldi	r30, 0xE8	; 232
     848:	f2 e0       	ldi	r31, 0x02	; 2
     84a:	df 01       	movw	r26, r30
     84c:	1d 92       	st	X+, r1
     84e:	8a 95       	dec	r24
     850:	e9 f7       	brne	.-6      	; 0x84c <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
     852:	41 e0       	ldi	r20, 0x01	; 1
     854:	50 e0       	ldi	r21, 0x00	; 0
     856:	68 e0       	ldi	r22, 0x08	; 8
     858:	73 e0       	ldi	r23, 0x03	; 3
     85a:	80 e6       	ldi	r24, 0x60	; 96
     85c:	0e 94 32 02 	call	0x464	; 0x464 <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
     860:	40 91 08 03 	lds	r20, 0x0308	; 0x800308 <data>
     864:	44 23       	and	r20, r20
     866:	41 f0       	breq	.+16     	; 0x878 <nrf24_read_message+0x34>
     868:	50 e0       	ldi	r21, 0x00	; 0
     86a:	4f 5f       	subi	r20, 0xFF	; 255
     86c:	5f 4f       	sbci	r21, 0xFF	; 255
     86e:	68 ee       	ldi	r22, 0xE8	; 232
     870:	72 e0       	ldi	r23, 0x02	; 2
     872:	81 e6       	ldi	r24, 0x61	; 97
     874:	0e 94 0a 02 	call	0x414	; 0x414 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
     878:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <rx_message.2167>
     87c:	88 23       	and	r24, r24
     87e:	69 f0       	breq	.+26     	; 0x89a <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
     880:	80 e4       	ldi	r24, 0x40	; 64
     882:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
		nrf24_write(STATUS,&data,1);
     886:	41 e0       	ldi	r20, 0x01	; 1
     888:	50 e0       	ldi	r21, 0x00	; 0
     88a:	68 e0       	ldi	r22, 0x08	; 8
     88c:	73 e0       	ldi	r23, 0x03	; 3
     88e:	87 e0       	ldi	r24, 0x07	; 7
     890:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
		
		return rx_message;
     894:	88 ee       	ldi	r24, 0xE8	; 232
     896:	92 e0       	ldi	r25, 0x02	; 2
     898:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
     89a:	80 e4       	ldi	r24, 0x40	; 64
     89c:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <data>
	nrf24_write(STATUS,&data,1);
     8a0:	41 e0       	ldi	r20, 0x01	; 1
     8a2:	50 e0       	ldi	r21, 0x00	; 0
     8a4:	68 e0       	ldi	r22, 0x08	; 8
     8a6:	73 e0       	ldi	r23, 0x03	; 3
     8a8:	87 e0       	ldi	r24, 0x07	; 7
     8aa:	0e 94 2e 02 	call	0x45c	; 0x45c <nrf24_write>
	
	return "failed";
     8ae:	8f ed       	ldi	r24, 0xDF	; 223
     8b0:	92 e0       	ldi	r25, 0x02	; 2
}
     8b2:	08 95       	ret

000008b4 <spi_master_init>:
	loop_until_bit_is_set(SPSR0, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
     8b4:	24 98       	cbi	0x04, 4	; 4
     8b6:	84 b1       	in	r24, 0x04	; 4
     8b8:	88 62       	ori	r24, 0x28	; 40
     8ba:	84 b9       	out	0x04, r24	; 4
     8bc:	80 e5       	ldi	r24, 0x50	; 80
     8be:	8c bd       	out	0x2c, r24	; 44
     8c0:	8d b5       	in	r24, 0x2d	; 45
     8c2:	81 60       	ori	r24, 0x01	; 1
     8c4:	8d bd       	out	0x2d, r24	; 45
     8c6:	08 95       	ret

000008c8 <spi_send>:
     8c8:	8e bd       	out	0x2e, r24	; 46
     8ca:	0d b4       	in	r0, 0x2d	; 45
     8cc:	07 fe       	sbrs	r0, 7
     8ce:	fd cf       	rjmp	.-6      	; 0x8ca <spi_send+0x2>
     8d0:	08 95       	ret

000008d2 <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR0 = send_data;
     8d2:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR0, SPIF);
     8d4:	0d b4       	in	r0, 0x2d	; 45
     8d6:	07 fe       	sbrs	r0, 7
     8d8:	fd cf       	rjmp	.-6      	; 0x8d4 <spi_exchange+0x2>
	return SPDR0;
     8da:	8e b5       	in	r24, 0x2e	; 46
}
     8dc:	08 95       	ret

000008de <uart_putchar>:
    stdout = &mystdout;
    stdin  = &mystdin; 
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
     8de:	cf 93       	push	r28
     8e0:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     8e2:	8a 30       	cpi	r24, 0x0A	; 10
     8e4:	19 f4       	brne	.+6      	; 0x8ec <uart_putchar+0xe>
		uart_putchar('\r', stream);
     8e6:	8d e0       	ldi	r24, 0x0D	; 13
     8e8:	0e 94 6f 04 	call	0x8de	; 0x8de <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     8ec:	e0 ec       	ldi	r30, 0xC0	; 192
     8ee:	f0 e0       	ldi	r31, 0x00	; 0
     8f0:	80 81       	ld	r24, Z
     8f2:	85 ff       	sbrs	r24, 5
     8f4:	fd cf       	rjmp	.-6      	; 0x8f0 <uart_putchar+0x12>
	UDR0 = c;
     8f6:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
     8fa:	80 e0       	ldi	r24, 0x00	; 0
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	cf 91       	pop	r28
     900:	08 95       	ret

00000902 <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     902:	e0 ec       	ldi	r30, 0xC0	; 192
     904:	f0 e0       	ldi	r31, 0x00	; 0
     906:	80 81       	ld	r24, Z
     908:	88 23       	and	r24, r24
     90a:	ec f7       	brge	.-6      	; 0x906 <uart_getchar+0x4>
	return UDR0;
     90c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	08 95       	ret

00000914 <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE); 
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
    UBRR0H = MYUBRR >> 8;
     914:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = MYUBRR;
     918:	87 e6       	ldi	r24, 0x67	; 103
     91a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     91e:	88 e1       	ldi	r24, 0x18	; 24
     920:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    
    stdout = &mystdout;
     924:	e9 e0       	ldi	r30, 0x09	; 9
     926:	f3 e0       	ldi	r31, 0x03	; 3
     928:	88 e1       	ldi	r24, 0x18	; 24
     92a:	91 e0       	ldi	r25, 0x01	; 1
     92c:	93 83       	std	Z+3, r25	; 0x03
     92e:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; 
     930:	8a e0       	ldi	r24, 0x0A	; 10
     932:	91 e0       	ldi	r25, 0x01	; 1
     934:	91 83       	std	Z+1, r25	; 0x01
     936:	80 83       	st	Z, r24
     938:	08 95       	ret

0000093a <__divsf3>:
     93a:	0e 94 b1 04 	call	0x962	; 0x962 <__divsf3x>
     93e:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_round>
     942:	0e 94 92 05 	call	0xb24	; 0xb24 <__fp_pscB>
     946:	58 f0       	brcs	.+22     	; 0x95e <__divsf3+0x24>
     948:	0e 94 8b 05 	call	0xb16	; 0xb16 <__fp_pscA>
     94c:	40 f0       	brcs	.+16     	; 0x95e <__divsf3+0x24>
     94e:	29 f4       	brne	.+10     	; 0x95a <__divsf3+0x20>
     950:	5f 3f       	cpi	r21, 0xFF	; 255
     952:	29 f0       	breq	.+10     	; 0x95e <__divsf3+0x24>
     954:	0c 94 82 05 	jmp	0xb04	; 0xb04 <__fp_inf>
     958:	51 11       	cpse	r21, r1
     95a:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_szero>
     95e:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__fp_nan>

00000962 <__divsf3x>:
     962:	0e 94 aa 05 	call	0xb54	; 0xb54 <__fp_split3>
     966:	68 f3       	brcs	.-38     	; 0x942 <__divsf3+0x8>

00000968 <__divsf3_pse>:
     968:	99 23       	and	r25, r25
     96a:	b1 f3       	breq	.-20     	; 0x958 <__divsf3+0x1e>
     96c:	55 23       	and	r21, r21
     96e:	91 f3       	breq	.-28     	; 0x954 <__divsf3+0x1a>
     970:	95 1b       	sub	r25, r21
     972:	55 0b       	sbc	r21, r21
     974:	bb 27       	eor	r27, r27
     976:	aa 27       	eor	r26, r26
     978:	62 17       	cp	r22, r18
     97a:	73 07       	cpc	r23, r19
     97c:	84 07       	cpc	r24, r20
     97e:	38 f0       	brcs	.+14     	; 0x98e <__divsf3_pse+0x26>
     980:	9f 5f       	subi	r25, 0xFF	; 255
     982:	5f 4f       	sbci	r21, 0xFF	; 255
     984:	22 0f       	add	r18, r18
     986:	33 1f       	adc	r19, r19
     988:	44 1f       	adc	r20, r20
     98a:	aa 1f       	adc	r26, r26
     98c:	a9 f3       	breq	.-22     	; 0x978 <__divsf3_pse+0x10>
     98e:	35 d0       	rcall	.+106    	; 0x9fa <__divsf3_pse+0x92>
     990:	0e 2e       	mov	r0, r30
     992:	3a f0       	brmi	.+14     	; 0x9a2 <__divsf3_pse+0x3a>
     994:	e0 e8       	ldi	r30, 0x80	; 128
     996:	32 d0       	rcall	.+100    	; 0x9fc <__divsf3_pse+0x94>
     998:	91 50       	subi	r25, 0x01	; 1
     99a:	50 40       	sbci	r21, 0x00	; 0
     99c:	e6 95       	lsr	r30
     99e:	00 1c       	adc	r0, r0
     9a0:	ca f7       	brpl	.-14     	; 0x994 <__divsf3_pse+0x2c>
     9a2:	2b d0       	rcall	.+86     	; 0x9fa <__divsf3_pse+0x92>
     9a4:	fe 2f       	mov	r31, r30
     9a6:	29 d0       	rcall	.+82     	; 0x9fa <__divsf3_pse+0x92>
     9a8:	66 0f       	add	r22, r22
     9aa:	77 1f       	adc	r23, r23
     9ac:	88 1f       	adc	r24, r24
     9ae:	bb 1f       	adc	r27, r27
     9b0:	26 17       	cp	r18, r22
     9b2:	37 07       	cpc	r19, r23
     9b4:	48 07       	cpc	r20, r24
     9b6:	ab 07       	cpc	r26, r27
     9b8:	b0 e8       	ldi	r27, 0x80	; 128
     9ba:	09 f0       	breq	.+2      	; 0x9be <__divsf3_pse+0x56>
     9bc:	bb 0b       	sbc	r27, r27
     9be:	80 2d       	mov	r24, r0
     9c0:	bf 01       	movw	r22, r30
     9c2:	ff 27       	eor	r31, r31
     9c4:	93 58       	subi	r25, 0x83	; 131
     9c6:	5f 4f       	sbci	r21, 0xFF	; 255
     9c8:	3a f0       	brmi	.+14     	; 0x9d8 <__divsf3_pse+0x70>
     9ca:	9e 3f       	cpi	r25, 0xFE	; 254
     9cc:	51 05       	cpc	r21, r1
     9ce:	78 f0       	brcs	.+30     	; 0x9ee <__divsf3_pse+0x86>
     9d0:	0c 94 82 05 	jmp	0xb04	; 0xb04 <__fp_inf>
     9d4:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_szero>
     9d8:	5f 3f       	cpi	r21, 0xFF	; 255
     9da:	e4 f3       	brlt	.-8      	; 0x9d4 <__divsf3_pse+0x6c>
     9dc:	98 3e       	cpi	r25, 0xE8	; 232
     9de:	d4 f3       	brlt	.-12     	; 0x9d4 <__divsf3_pse+0x6c>
     9e0:	86 95       	lsr	r24
     9e2:	77 95       	ror	r23
     9e4:	67 95       	ror	r22
     9e6:	b7 95       	ror	r27
     9e8:	f7 95       	ror	r31
     9ea:	9f 5f       	subi	r25, 0xFF	; 255
     9ec:	c9 f7       	brne	.-14     	; 0x9e0 <__divsf3_pse+0x78>
     9ee:	88 0f       	add	r24, r24
     9f0:	91 1d       	adc	r25, r1
     9f2:	96 95       	lsr	r25
     9f4:	87 95       	ror	r24
     9f6:	97 f9       	bld	r25, 7
     9f8:	08 95       	ret
     9fa:	e1 e0       	ldi	r30, 0x01	; 1
     9fc:	66 0f       	add	r22, r22
     9fe:	77 1f       	adc	r23, r23
     a00:	88 1f       	adc	r24, r24
     a02:	bb 1f       	adc	r27, r27
     a04:	62 17       	cp	r22, r18
     a06:	73 07       	cpc	r23, r19
     a08:	84 07       	cpc	r24, r20
     a0a:	ba 07       	cpc	r27, r26
     a0c:	20 f0       	brcs	.+8      	; 0xa16 <__divsf3_pse+0xae>
     a0e:	62 1b       	sub	r22, r18
     a10:	73 0b       	sbc	r23, r19
     a12:	84 0b       	sbc	r24, r20
     a14:	ba 0b       	sbc	r27, r26
     a16:	ee 1f       	adc	r30, r30
     a18:	88 f7       	brcc	.-30     	; 0x9fc <__divsf3_pse+0x94>
     a1a:	e0 95       	com	r30
     a1c:	08 95       	ret

00000a1e <__fixsfsi>:
     a1e:	0e 94 16 05 	call	0xa2c	; 0xa2c <__fixunssfsi>
     a22:	68 94       	set
     a24:	b1 11       	cpse	r27, r1
     a26:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_szero>
     a2a:	08 95       	ret

00000a2c <__fixunssfsi>:
     a2c:	0e 94 b2 05 	call	0xb64	; 0xb64 <__fp_splitA>
     a30:	88 f0       	brcs	.+34     	; 0xa54 <__fixunssfsi+0x28>
     a32:	9f 57       	subi	r25, 0x7F	; 127
     a34:	98 f0       	brcs	.+38     	; 0xa5c <__fixunssfsi+0x30>
     a36:	b9 2f       	mov	r27, r25
     a38:	99 27       	eor	r25, r25
     a3a:	b7 51       	subi	r27, 0x17	; 23
     a3c:	b0 f0       	brcs	.+44     	; 0xa6a <__fixunssfsi+0x3e>
     a3e:	e1 f0       	breq	.+56     	; 0xa78 <__fixunssfsi+0x4c>
     a40:	66 0f       	add	r22, r22
     a42:	77 1f       	adc	r23, r23
     a44:	88 1f       	adc	r24, r24
     a46:	99 1f       	adc	r25, r25
     a48:	1a f0       	brmi	.+6      	; 0xa50 <__fixunssfsi+0x24>
     a4a:	ba 95       	dec	r27
     a4c:	c9 f7       	brne	.-14     	; 0xa40 <__fixunssfsi+0x14>
     a4e:	14 c0       	rjmp	.+40     	; 0xa78 <__fixunssfsi+0x4c>
     a50:	b1 30       	cpi	r27, 0x01	; 1
     a52:	91 f0       	breq	.+36     	; 0xa78 <__fixunssfsi+0x4c>
     a54:	0e 94 cc 05 	call	0xb98	; 0xb98 <__fp_zero>
     a58:	b1 e0       	ldi	r27, 0x01	; 1
     a5a:	08 95       	ret
     a5c:	0c 94 cc 05 	jmp	0xb98	; 0xb98 <__fp_zero>
     a60:	67 2f       	mov	r22, r23
     a62:	78 2f       	mov	r23, r24
     a64:	88 27       	eor	r24, r24
     a66:	b8 5f       	subi	r27, 0xF8	; 248
     a68:	39 f0       	breq	.+14     	; 0xa78 <__fixunssfsi+0x4c>
     a6a:	b9 3f       	cpi	r27, 0xF9	; 249
     a6c:	cc f3       	brlt	.-14     	; 0xa60 <__fixunssfsi+0x34>
     a6e:	86 95       	lsr	r24
     a70:	77 95       	ror	r23
     a72:	67 95       	ror	r22
     a74:	b3 95       	inc	r27
     a76:	d9 f7       	brne	.-10     	; 0xa6e <__fixunssfsi+0x42>
     a78:	3e f4       	brtc	.+14     	; 0xa88 <__fixunssfsi+0x5c>
     a7a:	90 95       	com	r25
     a7c:	80 95       	com	r24
     a7e:	70 95       	com	r23
     a80:	61 95       	neg	r22
     a82:	7f 4f       	sbci	r23, 0xFF	; 255
     a84:	8f 4f       	sbci	r24, 0xFF	; 255
     a86:	9f 4f       	sbci	r25, 0xFF	; 255
     a88:	08 95       	ret

00000a8a <__floatunsisf>:
     a8a:	e8 94       	clt
     a8c:	09 c0       	rjmp	.+18     	; 0xaa0 <__floatsisf+0x12>

00000a8e <__floatsisf>:
     a8e:	97 fb       	bst	r25, 7
     a90:	3e f4       	brtc	.+14     	; 0xaa0 <__floatsisf+0x12>
     a92:	90 95       	com	r25
     a94:	80 95       	com	r24
     a96:	70 95       	com	r23
     a98:	61 95       	neg	r22
     a9a:	7f 4f       	sbci	r23, 0xFF	; 255
     a9c:	8f 4f       	sbci	r24, 0xFF	; 255
     a9e:	9f 4f       	sbci	r25, 0xFF	; 255
     aa0:	99 23       	and	r25, r25
     aa2:	a9 f0       	breq	.+42     	; 0xace <__floatsisf+0x40>
     aa4:	f9 2f       	mov	r31, r25
     aa6:	96 e9       	ldi	r25, 0x96	; 150
     aa8:	bb 27       	eor	r27, r27
     aaa:	93 95       	inc	r25
     aac:	f6 95       	lsr	r31
     aae:	87 95       	ror	r24
     ab0:	77 95       	ror	r23
     ab2:	67 95       	ror	r22
     ab4:	b7 95       	ror	r27
     ab6:	f1 11       	cpse	r31, r1
     ab8:	f8 cf       	rjmp	.-16     	; 0xaaa <__floatsisf+0x1c>
     aba:	fa f4       	brpl	.+62     	; 0xafa <__floatsisf+0x6c>
     abc:	bb 0f       	add	r27, r27
     abe:	11 f4       	brne	.+4      	; 0xac4 <__floatsisf+0x36>
     ac0:	60 ff       	sbrs	r22, 0
     ac2:	1b c0       	rjmp	.+54     	; 0xafa <__floatsisf+0x6c>
     ac4:	6f 5f       	subi	r22, 0xFF	; 255
     ac6:	7f 4f       	sbci	r23, 0xFF	; 255
     ac8:	8f 4f       	sbci	r24, 0xFF	; 255
     aca:	9f 4f       	sbci	r25, 0xFF	; 255
     acc:	16 c0       	rjmp	.+44     	; 0xafa <__floatsisf+0x6c>
     ace:	88 23       	and	r24, r24
     ad0:	11 f0       	breq	.+4      	; 0xad6 <__floatsisf+0x48>
     ad2:	96 e9       	ldi	r25, 0x96	; 150
     ad4:	11 c0       	rjmp	.+34     	; 0xaf8 <__floatsisf+0x6a>
     ad6:	77 23       	and	r23, r23
     ad8:	21 f0       	breq	.+8      	; 0xae2 <__floatsisf+0x54>
     ada:	9e e8       	ldi	r25, 0x8E	; 142
     adc:	87 2f       	mov	r24, r23
     ade:	76 2f       	mov	r23, r22
     ae0:	05 c0       	rjmp	.+10     	; 0xaec <__floatsisf+0x5e>
     ae2:	66 23       	and	r22, r22
     ae4:	71 f0       	breq	.+28     	; 0xb02 <__floatsisf+0x74>
     ae6:	96 e8       	ldi	r25, 0x86	; 134
     ae8:	86 2f       	mov	r24, r22
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	60 e0       	ldi	r22, 0x00	; 0
     aee:	2a f0       	brmi	.+10     	; 0xafa <__floatsisf+0x6c>
     af0:	9a 95       	dec	r25
     af2:	66 0f       	add	r22, r22
     af4:	77 1f       	adc	r23, r23
     af6:	88 1f       	adc	r24, r24
     af8:	da f7       	brpl	.-10     	; 0xaf0 <__floatsisf+0x62>
     afa:	88 0f       	add	r24, r24
     afc:	96 95       	lsr	r25
     afe:	87 95       	ror	r24
     b00:	97 f9       	bld	r25, 7
     b02:	08 95       	ret

00000b04 <__fp_inf>:
     b04:	97 f9       	bld	r25, 7
     b06:	9f 67       	ori	r25, 0x7F	; 127
     b08:	80 e8       	ldi	r24, 0x80	; 128
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	60 e0       	ldi	r22, 0x00	; 0
     b0e:	08 95       	ret

00000b10 <__fp_nan>:
     b10:	9f ef       	ldi	r25, 0xFF	; 255
     b12:	80 ec       	ldi	r24, 0xC0	; 192
     b14:	08 95       	ret

00000b16 <__fp_pscA>:
     b16:	00 24       	eor	r0, r0
     b18:	0a 94       	dec	r0
     b1a:	16 16       	cp	r1, r22
     b1c:	17 06       	cpc	r1, r23
     b1e:	18 06       	cpc	r1, r24
     b20:	09 06       	cpc	r0, r25
     b22:	08 95       	ret

00000b24 <__fp_pscB>:
     b24:	00 24       	eor	r0, r0
     b26:	0a 94       	dec	r0
     b28:	12 16       	cp	r1, r18
     b2a:	13 06       	cpc	r1, r19
     b2c:	14 06       	cpc	r1, r20
     b2e:	05 06       	cpc	r0, r21
     b30:	08 95       	ret

00000b32 <__fp_round>:
     b32:	09 2e       	mov	r0, r25
     b34:	03 94       	inc	r0
     b36:	00 0c       	add	r0, r0
     b38:	11 f4       	brne	.+4      	; 0xb3e <__fp_round+0xc>
     b3a:	88 23       	and	r24, r24
     b3c:	52 f0       	brmi	.+20     	; 0xb52 <__fp_round+0x20>
     b3e:	bb 0f       	add	r27, r27
     b40:	40 f4       	brcc	.+16     	; 0xb52 <__fp_round+0x20>
     b42:	bf 2b       	or	r27, r31
     b44:	11 f4       	brne	.+4      	; 0xb4a <__fp_round+0x18>
     b46:	60 ff       	sbrs	r22, 0
     b48:	04 c0       	rjmp	.+8      	; 0xb52 <__fp_round+0x20>
     b4a:	6f 5f       	subi	r22, 0xFF	; 255
     b4c:	7f 4f       	sbci	r23, 0xFF	; 255
     b4e:	8f 4f       	sbci	r24, 0xFF	; 255
     b50:	9f 4f       	sbci	r25, 0xFF	; 255
     b52:	08 95       	ret

00000b54 <__fp_split3>:
     b54:	57 fd       	sbrc	r21, 7
     b56:	90 58       	subi	r25, 0x80	; 128
     b58:	44 0f       	add	r20, r20
     b5a:	55 1f       	adc	r21, r21
     b5c:	59 f0       	breq	.+22     	; 0xb74 <__fp_splitA+0x10>
     b5e:	5f 3f       	cpi	r21, 0xFF	; 255
     b60:	71 f0       	breq	.+28     	; 0xb7e <__fp_splitA+0x1a>
     b62:	47 95       	ror	r20

00000b64 <__fp_splitA>:
     b64:	88 0f       	add	r24, r24
     b66:	97 fb       	bst	r25, 7
     b68:	99 1f       	adc	r25, r25
     b6a:	61 f0       	breq	.+24     	; 0xb84 <__fp_splitA+0x20>
     b6c:	9f 3f       	cpi	r25, 0xFF	; 255
     b6e:	79 f0       	breq	.+30     	; 0xb8e <__fp_splitA+0x2a>
     b70:	87 95       	ror	r24
     b72:	08 95       	ret
     b74:	12 16       	cp	r1, r18
     b76:	13 06       	cpc	r1, r19
     b78:	14 06       	cpc	r1, r20
     b7a:	55 1f       	adc	r21, r21
     b7c:	f2 cf       	rjmp	.-28     	; 0xb62 <__fp_split3+0xe>
     b7e:	46 95       	lsr	r20
     b80:	f1 df       	rcall	.-30     	; 0xb64 <__fp_splitA>
     b82:	08 c0       	rjmp	.+16     	; 0xb94 <__fp_splitA+0x30>
     b84:	16 16       	cp	r1, r22
     b86:	17 06       	cpc	r1, r23
     b88:	18 06       	cpc	r1, r24
     b8a:	99 1f       	adc	r25, r25
     b8c:	f1 cf       	rjmp	.-30     	; 0xb70 <__fp_splitA+0xc>
     b8e:	86 95       	lsr	r24
     b90:	71 05       	cpc	r23, r1
     b92:	61 05       	cpc	r22, r1
     b94:	08 94       	sec
     b96:	08 95       	ret

00000b98 <__fp_zero>:
     b98:	e8 94       	clt

00000b9a <__fp_szero>:
     b9a:	bb 27       	eor	r27, r27
     b9c:	66 27       	eor	r22, r22
     b9e:	77 27       	eor	r23, r23
     ba0:	cb 01       	movw	r24, r22
     ba2:	97 f9       	bld	r25, 7
     ba4:	08 95       	ret

00000ba6 <__mulsf3>:
     ba6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__mulsf3x>
     baa:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_round>
     bae:	0e 94 8b 05 	call	0xb16	; 0xb16 <__fp_pscA>
     bb2:	38 f0       	brcs	.+14     	; 0xbc2 <__mulsf3+0x1c>
     bb4:	0e 94 92 05 	call	0xb24	; 0xb24 <__fp_pscB>
     bb8:	20 f0       	brcs	.+8      	; 0xbc2 <__mulsf3+0x1c>
     bba:	95 23       	and	r25, r21
     bbc:	11 f0       	breq	.+4      	; 0xbc2 <__mulsf3+0x1c>
     bbe:	0c 94 82 05 	jmp	0xb04	; 0xb04 <__fp_inf>
     bc2:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__fp_nan>
     bc6:	11 24       	eor	r1, r1
     bc8:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_szero>

00000bcc <__mulsf3x>:
     bcc:	0e 94 aa 05 	call	0xb54	; 0xb54 <__fp_split3>
     bd0:	70 f3       	brcs	.-36     	; 0xbae <__mulsf3+0x8>

00000bd2 <__mulsf3_pse>:
     bd2:	95 9f       	mul	r25, r21
     bd4:	c1 f3       	breq	.-16     	; 0xbc6 <__mulsf3+0x20>
     bd6:	95 0f       	add	r25, r21
     bd8:	50 e0       	ldi	r21, 0x00	; 0
     bda:	55 1f       	adc	r21, r21
     bdc:	62 9f       	mul	r22, r18
     bde:	f0 01       	movw	r30, r0
     be0:	72 9f       	mul	r23, r18
     be2:	bb 27       	eor	r27, r27
     be4:	f0 0d       	add	r31, r0
     be6:	b1 1d       	adc	r27, r1
     be8:	63 9f       	mul	r22, r19
     bea:	aa 27       	eor	r26, r26
     bec:	f0 0d       	add	r31, r0
     bee:	b1 1d       	adc	r27, r1
     bf0:	aa 1f       	adc	r26, r26
     bf2:	64 9f       	mul	r22, r20
     bf4:	66 27       	eor	r22, r22
     bf6:	b0 0d       	add	r27, r0
     bf8:	a1 1d       	adc	r26, r1
     bfa:	66 1f       	adc	r22, r22
     bfc:	82 9f       	mul	r24, r18
     bfe:	22 27       	eor	r18, r18
     c00:	b0 0d       	add	r27, r0
     c02:	a1 1d       	adc	r26, r1
     c04:	62 1f       	adc	r22, r18
     c06:	73 9f       	mul	r23, r19
     c08:	b0 0d       	add	r27, r0
     c0a:	a1 1d       	adc	r26, r1
     c0c:	62 1f       	adc	r22, r18
     c0e:	83 9f       	mul	r24, r19
     c10:	a0 0d       	add	r26, r0
     c12:	61 1d       	adc	r22, r1
     c14:	22 1f       	adc	r18, r18
     c16:	74 9f       	mul	r23, r20
     c18:	33 27       	eor	r19, r19
     c1a:	a0 0d       	add	r26, r0
     c1c:	61 1d       	adc	r22, r1
     c1e:	23 1f       	adc	r18, r19
     c20:	84 9f       	mul	r24, r20
     c22:	60 0d       	add	r22, r0
     c24:	21 1d       	adc	r18, r1
     c26:	82 2f       	mov	r24, r18
     c28:	76 2f       	mov	r23, r22
     c2a:	6a 2f       	mov	r22, r26
     c2c:	11 24       	eor	r1, r1
     c2e:	9f 57       	subi	r25, 0x7F	; 127
     c30:	50 40       	sbci	r21, 0x00	; 0
     c32:	9a f0       	brmi	.+38     	; 0xc5a <__mulsf3_pse+0x88>
     c34:	f1 f0       	breq	.+60     	; 0xc72 <__mulsf3_pse+0xa0>
     c36:	88 23       	and	r24, r24
     c38:	4a f0       	brmi	.+18     	; 0xc4c <__mulsf3_pse+0x7a>
     c3a:	ee 0f       	add	r30, r30
     c3c:	ff 1f       	adc	r31, r31
     c3e:	bb 1f       	adc	r27, r27
     c40:	66 1f       	adc	r22, r22
     c42:	77 1f       	adc	r23, r23
     c44:	88 1f       	adc	r24, r24
     c46:	91 50       	subi	r25, 0x01	; 1
     c48:	50 40       	sbci	r21, 0x00	; 0
     c4a:	a9 f7       	brne	.-22     	; 0xc36 <__mulsf3_pse+0x64>
     c4c:	9e 3f       	cpi	r25, 0xFE	; 254
     c4e:	51 05       	cpc	r21, r1
     c50:	80 f0       	brcs	.+32     	; 0xc72 <__mulsf3_pse+0xa0>
     c52:	0c 94 82 05 	jmp	0xb04	; 0xb04 <__fp_inf>
     c56:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_szero>
     c5a:	5f 3f       	cpi	r21, 0xFF	; 255
     c5c:	e4 f3       	brlt	.-8      	; 0xc56 <__mulsf3_pse+0x84>
     c5e:	98 3e       	cpi	r25, 0xE8	; 232
     c60:	d4 f3       	brlt	.-12     	; 0xc56 <__mulsf3_pse+0x84>
     c62:	86 95       	lsr	r24
     c64:	77 95       	ror	r23
     c66:	67 95       	ror	r22
     c68:	b7 95       	ror	r27
     c6a:	f7 95       	ror	r31
     c6c:	e7 95       	ror	r30
     c6e:	9f 5f       	subi	r25, 0xFF	; 255
     c70:	c1 f7       	brne	.-16     	; 0xc62 <__mulsf3_pse+0x90>
     c72:	fe 2b       	or	r31, r30
     c74:	88 0f       	add	r24, r24
     c76:	91 1d       	adc	r25, r1
     c78:	96 95       	lsr	r25
     c7a:	87 95       	ror	r24
     c7c:	97 f9       	bld	r25, 7
     c7e:	08 95       	ret

00000c80 <strcpy>:
     c80:	fb 01       	movw	r30, r22
     c82:	dc 01       	movw	r26, r24
     c84:	01 90       	ld	r0, Z+
     c86:	0d 92       	st	X+, r0
     c88:	00 20       	and	r0, r0
     c8a:	e1 f7       	brne	.-8      	; 0xc84 <strcpy+0x4>
     c8c:	08 95       	ret

00000c8e <printf>:
     c8e:	a0 e0       	ldi	r26, 0x00	; 0
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	ed e4       	ldi	r30, 0x4D	; 77
     c94:	f6 e0       	ldi	r31, 0x06	; 6
     c96:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <__prologue_saves__+0x20>
     c9a:	ae 01       	movw	r20, r28
     c9c:	4b 5f       	subi	r20, 0xFB	; 251
     c9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ca0:	fa 01       	movw	r30, r20
     ca2:	61 91       	ld	r22, Z+
     ca4:	71 91       	ld	r23, Z+
     ca6:	af 01       	movw	r20, r30
     ca8:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <__iob+0x2>
     cac:	90 91 0c 03 	lds	r25, 0x030C	; 0x80030c <__iob+0x3>
     cb0:	0e 94 bd 06 	call	0xd7a	; 0xd7a <vfprintf>
     cb4:	e2 e0       	ldi	r30, 0x02	; 2
     cb6:	0c 94 7a 09 	jmp	0x12f4	; 0x12f4 <__epilogue_restores__+0x20>

00000cba <puts>:
     cba:	0f 93       	push	r16
     cbc:	1f 93       	push	r17
     cbe:	cf 93       	push	r28
     cc0:	df 93       	push	r29
     cc2:	e0 91 0b 03 	lds	r30, 0x030B	; 0x80030b <__iob+0x2>
     cc6:	f0 91 0c 03 	lds	r31, 0x030C	; 0x80030c <__iob+0x3>
     cca:	23 81       	ldd	r18, Z+3	; 0x03
     ccc:	21 ff       	sbrs	r18, 1
     cce:	1b c0       	rjmp	.+54     	; 0xd06 <puts+0x4c>
     cd0:	8c 01       	movw	r16, r24
     cd2:	d0 e0       	ldi	r29, 0x00	; 0
     cd4:	c0 e0       	ldi	r28, 0x00	; 0
     cd6:	f8 01       	movw	r30, r16
     cd8:	81 91       	ld	r24, Z+
     cda:	8f 01       	movw	r16, r30
     cdc:	60 91 0b 03 	lds	r22, 0x030B	; 0x80030b <__iob+0x2>
     ce0:	70 91 0c 03 	lds	r23, 0x030C	; 0x80030c <__iob+0x3>
     ce4:	db 01       	movw	r26, r22
     ce6:	18 96       	adiw	r26, 0x08	; 8
     ce8:	ed 91       	ld	r30, X+
     cea:	fc 91       	ld	r31, X
     cec:	19 97       	sbiw	r26, 0x09	; 9
     cee:	88 23       	and	r24, r24
     cf0:	31 f0       	breq	.+12     	; 0xcfe <puts+0x44>
     cf2:	09 95       	icall
     cf4:	89 2b       	or	r24, r25
     cf6:	79 f3       	breq	.-34     	; 0xcd6 <puts+0x1c>
     cf8:	df ef       	ldi	r29, 0xFF	; 255
     cfa:	cf ef       	ldi	r28, 0xFF	; 255
     cfc:	ec cf       	rjmp	.-40     	; 0xcd6 <puts+0x1c>
     cfe:	8a e0       	ldi	r24, 0x0A	; 10
     d00:	09 95       	icall
     d02:	89 2b       	or	r24, r25
     d04:	19 f0       	breq	.+6      	; 0xd0c <puts+0x52>
     d06:	8f ef       	ldi	r24, 0xFF	; 255
     d08:	9f ef       	ldi	r25, 0xFF	; 255
     d0a:	02 c0       	rjmp	.+4      	; 0xd10 <puts+0x56>
     d0c:	8d 2f       	mov	r24, r29
     d0e:	9c 2f       	mov	r25, r28
     d10:	df 91       	pop	r29
     d12:	cf 91       	pop	r28
     d14:	1f 91       	pop	r17
     d16:	0f 91       	pop	r16
     d18:	08 95       	ret

00000d1a <snprintf>:
     d1a:	ae e0       	ldi	r26, 0x0E	; 14
     d1c:	b0 e0       	ldi	r27, 0x00	; 0
     d1e:	e3 e9       	ldi	r30, 0x93	; 147
     d20:	f6 e0       	ldi	r31, 0x06	; 6
     d22:	0c 94 5c 09 	jmp	0x12b8	; 0x12b8 <__prologue_saves__+0x1c>
     d26:	0d 89       	ldd	r16, Y+21	; 0x15
     d28:	1e 89       	ldd	r17, Y+22	; 0x16
     d2a:	8f 89       	ldd	r24, Y+23	; 0x17
     d2c:	98 8d       	ldd	r25, Y+24	; 0x18
     d2e:	26 e0       	ldi	r18, 0x06	; 6
     d30:	2c 83       	std	Y+4, r18	; 0x04
     d32:	1a 83       	std	Y+2, r17	; 0x02
     d34:	09 83       	std	Y+1, r16	; 0x01
     d36:	97 ff       	sbrs	r25, 7
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <snprintf+0x24>
     d3a:	80 e0       	ldi	r24, 0x00	; 0
     d3c:	90 e8       	ldi	r25, 0x80	; 128
     d3e:	01 97       	sbiw	r24, 0x01	; 1
     d40:	9e 83       	std	Y+6, r25	; 0x06
     d42:	8d 83       	std	Y+5, r24	; 0x05
     d44:	ae 01       	movw	r20, r28
     d46:	45 5e       	subi	r20, 0xE5	; 229
     d48:	5f 4f       	sbci	r21, 0xFF	; 255
     d4a:	69 8d       	ldd	r22, Y+25	; 0x19
     d4c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     d4e:	ce 01       	movw	r24, r28
     d50:	01 96       	adiw	r24, 0x01	; 1
     d52:	0e 94 bd 06 	call	0xd7a	; 0xd7a <vfprintf>
     d56:	4d 81       	ldd	r20, Y+5	; 0x05
     d58:	5e 81       	ldd	r21, Y+6	; 0x06
     d5a:	57 fd       	sbrc	r21, 7
     d5c:	0a c0       	rjmp	.+20     	; 0xd72 <snprintf+0x58>
     d5e:	2f 81       	ldd	r18, Y+7	; 0x07
     d60:	38 85       	ldd	r19, Y+8	; 0x08
     d62:	42 17       	cp	r20, r18
     d64:	53 07       	cpc	r21, r19
     d66:	0c f4       	brge	.+2      	; 0xd6a <snprintf+0x50>
     d68:	9a 01       	movw	r18, r20
     d6a:	f8 01       	movw	r30, r16
     d6c:	e2 0f       	add	r30, r18
     d6e:	f3 1f       	adc	r31, r19
     d70:	10 82       	st	Z, r1
     d72:	2e 96       	adiw	r28, 0x0e	; 14
     d74:	e4 e0       	ldi	r30, 0x04	; 4
     d76:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__epilogue_restores__+0x1c>

00000d7a <vfprintf>:
     d7a:	ab e0       	ldi	r26, 0x0B	; 11
     d7c:	b0 e0       	ldi	r27, 0x00	; 0
     d7e:	e3 ec       	ldi	r30, 0xC3	; 195
     d80:	f6 e0       	ldi	r31, 0x06	; 6
     d82:	0c 94 4e 09 	jmp	0x129c	; 0x129c <__prologue_saves__>
     d86:	6c 01       	movw	r12, r24
     d88:	7b 01       	movw	r14, r22
     d8a:	8a 01       	movw	r16, r20
     d8c:	fc 01       	movw	r30, r24
     d8e:	17 82       	std	Z+7, r1	; 0x07
     d90:	16 82       	std	Z+6, r1	; 0x06
     d92:	83 81       	ldd	r24, Z+3	; 0x03
     d94:	81 ff       	sbrs	r24, 1
     d96:	cc c1       	rjmp	.+920    	; 0x1130 <vfprintf+0x3b6>
     d98:	ce 01       	movw	r24, r28
     d9a:	01 96       	adiw	r24, 0x01	; 1
     d9c:	3c 01       	movw	r6, r24
     d9e:	f6 01       	movw	r30, r12
     da0:	93 81       	ldd	r25, Z+3	; 0x03
     da2:	f7 01       	movw	r30, r14
     da4:	93 fd       	sbrc	r25, 3
     da6:	85 91       	lpm	r24, Z+
     da8:	93 ff       	sbrs	r25, 3
     daa:	81 91       	ld	r24, Z+
     dac:	7f 01       	movw	r14, r30
     dae:	88 23       	and	r24, r24
     db0:	09 f4       	brne	.+2      	; 0xdb4 <vfprintf+0x3a>
     db2:	ba c1       	rjmp	.+884    	; 0x1128 <vfprintf+0x3ae>
     db4:	85 32       	cpi	r24, 0x25	; 37
     db6:	39 f4       	brne	.+14     	; 0xdc6 <vfprintf+0x4c>
     db8:	93 fd       	sbrc	r25, 3
     dba:	85 91       	lpm	r24, Z+
     dbc:	93 ff       	sbrs	r25, 3
     dbe:	81 91       	ld	r24, Z+
     dc0:	7f 01       	movw	r14, r30
     dc2:	85 32       	cpi	r24, 0x25	; 37
     dc4:	29 f4       	brne	.+10     	; 0xdd0 <vfprintf+0x56>
     dc6:	b6 01       	movw	r22, r12
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
     dce:	e7 cf       	rjmp	.-50     	; 0xd9e <vfprintf+0x24>
     dd0:	91 2c       	mov	r9, r1
     dd2:	21 2c       	mov	r2, r1
     dd4:	31 2c       	mov	r3, r1
     dd6:	ff e1       	ldi	r31, 0x1F	; 31
     dd8:	f3 15       	cp	r31, r3
     dda:	d8 f0       	brcs	.+54     	; 0xe12 <vfprintf+0x98>
     ddc:	8b 32       	cpi	r24, 0x2B	; 43
     dde:	79 f0       	breq	.+30     	; 0xdfe <vfprintf+0x84>
     de0:	38 f4       	brcc	.+14     	; 0xdf0 <vfprintf+0x76>
     de2:	80 32       	cpi	r24, 0x20	; 32
     de4:	79 f0       	breq	.+30     	; 0xe04 <vfprintf+0x8a>
     de6:	83 32       	cpi	r24, 0x23	; 35
     de8:	a1 f4       	brne	.+40     	; 0xe12 <vfprintf+0x98>
     dea:	23 2d       	mov	r18, r3
     dec:	20 61       	ori	r18, 0x10	; 16
     dee:	1d c0       	rjmp	.+58     	; 0xe2a <vfprintf+0xb0>
     df0:	8d 32       	cpi	r24, 0x2D	; 45
     df2:	61 f0       	breq	.+24     	; 0xe0c <vfprintf+0x92>
     df4:	80 33       	cpi	r24, 0x30	; 48
     df6:	69 f4       	brne	.+26     	; 0xe12 <vfprintf+0x98>
     df8:	23 2d       	mov	r18, r3
     dfa:	21 60       	ori	r18, 0x01	; 1
     dfc:	16 c0       	rjmp	.+44     	; 0xe2a <vfprintf+0xb0>
     dfe:	83 2d       	mov	r24, r3
     e00:	82 60       	ori	r24, 0x02	; 2
     e02:	38 2e       	mov	r3, r24
     e04:	e3 2d       	mov	r30, r3
     e06:	e4 60       	ori	r30, 0x04	; 4
     e08:	3e 2e       	mov	r3, r30
     e0a:	2a c0       	rjmp	.+84     	; 0xe60 <vfprintf+0xe6>
     e0c:	f3 2d       	mov	r31, r3
     e0e:	f8 60       	ori	r31, 0x08	; 8
     e10:	1d c0       	rjmp	.+58     	; 0xe4c <vfprintf+0xd2>
     e12:	37 fc       	sbrc	r3, 7
     e14:	2d c0       	rjmp	.+90     	; 0xe70 <vfprintf+0xf6>
     e16:	20 ed       	ldi	r18, 0xD0	; 208
     e18:	28 0f       	add	r18, r24
     e1a:	2a 30       	cpi	r18, 0x0A	; 10
     e1c:	40 f0       	brcs	.+16     	; 0xe2e <vfprintf+0xb4>
     e1e:	8e 32       	cpi	r24, 0x2E	; 46
     e20:	b9 f4       	brne	.+46     	; 0xe50 <vfprintf+0xd6>
     e22:	36 fc       	sbrc	r3, 6
     e24:	81 c1       	rjmp	.+770    	; 0x1128 <vfprintf+0x3ae>
     e26:	23 2d       	mov	r18, r3
     e28:	20 64       	ori	r18, 0x40	; 64
     e2a:	32 2e       	mov	r3, r18
     e2c:	19 c0       	rjmp	.+50     	; 0xe60 <vfprintf+0xe6>
     e2e:	36 fe       	sbrs	r3, 6
     e30:	06 c0       	rjmp	.+12     	; 0xe3e <vfprintf+0xc4>
     e32:	8a e0       	ldi	r24, 0x0A	; 10
     e34:	98 9e       	mul	r9, r24
     e36:	20 0d       	add	r18, r0
     e38:	11 24       	eor	r1, r1
     e3a:	92 2e       	mov	r9, r18
     e3c:	11 c0       	rjmp	.+34     	; 0xe60 <vfprintf+0xe6>
     e3e:	ea e0       	ldi	r30, 0x0A	; 10
     e40:	2e 9e       	mul	r2, r30
     e42:	20 0d       	add	r18, r0
     e44:	11 24       	eor	r1, r1
     e46:	22 2e       	mov	r2, r18
     e48:	f3 2d       	mov	r31, r3
     e4a:	f0 62       	ori	r31, 0x20	; 32
     e4c:	3f 2e       	mov	r3, r31
     e4e:	08 c0       	rjmp	.+16     	; 0xe60 <vfprintf+0xe6>
     e50:	8c 36       	cpi	r24, 0x6C	; 108
     e52:	21 f4       	brne	.+8      	; 0xe5c <vfprintf+0xe2>
     e54:	83 2d       	mov	r24, r3
     e56:	80 68       	ori	r24, 0x80	; 128
     e58:	38 2e       	mov	r3, r24
     e5a:	02 c0       	rjmp	.+4      	; 0xe60 <vfprintf+0xe6>
     e5c:	88 36       	cpi	r24, 0x68	; 104
     e5e:	41 f4       	brne	.+16     	; 0xe70 <vfprintf+0xf6>
     e60:	f7 01       	movw	r30, r14
     e62:	93 fd       	sbrc	r25, 3
     e64:	85 91       	lpm	r24, Z+
     e66:	93 ff       	sbrs	r25, 3
     e68:	81 91       	ld	r24, Z+
     e6a:	7f 01       	movw	r14, r30
     e6c:	81 11       	cpse	r24, r1
     e6e:	b3 cf       	rjmp	.-154    	; 0xdd6 <vfprintf+0x5c>
     e70:	98 2f       	mov	r25, r24
     e72:	9f 7d       	andi	r25, 0xDF	; 223
     e74:	95 54       	subi	r25, 0x45	; 69
     e76:	93 30       	cpi	r25, 0x03	; 3
     e78:	28 f4       	brcc	.+10     	; 0xe84 <vfprintf+0x10a>
     e7a:	0c 5f       	subi	r16, 0xFC	; 252
     e7c:	1f 4f       	sbci	r17, 0xFF	; 255
     e7e:	9f e3       	ldi	r25, 0x3F	; 63
     e80:	99 83       	std	Y+1, r25	; 0x01
     e82:	0d c0       	rjmp	.+26     	; 0xe9e <vfprintf+0x124>
     e84:	83 36       	cpi	r24, 0x63	; 99
     e86:	31 f0       	breq	.+12     	; 0xe94 <vfprintf+0x11a>
     e88:	83 37       	cpi	r24, 0x73	; 115
     e8a:	71 f0       	breq	.+28     	; 0xea8 <vfprintf+0x12e>
     e8c:	83 35       	cpi	r24, 0x53	; 83
     e8e:	09 f0       	breq	.+2      	; 0xe92 <vfprintf+0x118>
     e90:	59 c0       	rjmp	.+178    	; 0xf44 <vfprintf+0x1ca>
     e92:	21 c0       	rjmp	.+66     	; 0xed6 <vfprintf+0x15c>
     e94:	f8 01       	movw	r30, r16
     e96:	80 81       	ld	r24, Z
     e98:	89 83       	std	Y+1, r24	; 0x01
     e9a:	0e 5f       	subi	r16, 0xFE	; 254
     e9c:	1f 4f       	sbci	r17, 0xFF	; 255
     e9e:	88 24       	eor	r8, r8
     ea0:	83 94       	inc	r8
     ea2:	91 2c       	mov	r9, r1
     ea4:	53 01       	movw	r10, r6
     ea6:	13 c0       	rjmp	.+38     	; 0xece <vfprintf+0x154>
     ea8:	28 01       	movw	r4, r16
     eaa:	f2 e0       	ldi	r31, 0x02	; 2
     eac:	4f 0e       	add	r4, r31
     eae:	51 1c       	adc	r5, r1
     eb0:	f8 01       	movw	r30, r16
     eb2:	a0 80       	ld	r10, Z
     eb4:	b1 80       	ldd	r11, Z+1	; 0x01
     eb6:	36 fe       	sbrs	r3, 6
     eb8:	03 c0       	rjmp	.+6      	; 0xec0 <vfprintf+0x146>
     eba:	69 2d       	mov	r22, r9
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	02 c0       	rjmp	.+4      	; 0xec4 <vfprintf+0x14a>
     ec0:	6f ef       	ldi	r22, 0xFF	; 255
     ec2:	7f ef       	ldi	r23, 0xFF	; 255
     ec4:	c5 01       	movw	r24, r10
     ec6:	0e 94 a9 08 	call	0x1152	; 0x1152 <strnlen>
     eca:	4c 01       	movw	r8, r24
     ecc:	82 01       	movw	r16, r4
     ece:	f3 2d       	mov	r31, r3
     ed0:	ff 77       	andi	r31, 0x7F	; 127
     ed2:	3f 2e       	mov	r3, r31
     ed4:	16 c0       	rjmp	.+44     	; 0xf02 <vfprintf+0x188>
     ed6:	28 01       	movw	r4, r16
     ed8:	22 e0       	ldi	r18, 0x02	; 2
     eda:	42 0e       	add	r4, r18
     edc:	51 1c       	adc	r5, r1
     ede:	f8 01       	movw	r30, r16
     ee0:	a0 80       	ld	r10, Z
     ee2:	b1 80       	ldd	r11, Z+1	; 0x01
     ee4:	36 fe       	sbrs	r3, 6
     ee6:	03 c0       	rjmp	.+6      	; 0xeee <vfprintf+0x174>
     ee8:	69 2d       	mov	r22, r9
     eea:	70 e0       	ldi	r23, 0x00	; 0
     eec:	02 c0       	rjmp	.+4      	; 0xef2 <vfprintf+0x178>
     eee:	6f ef       	ldi	r22, 0xFF	; 255
     ef0:	7f ef       	ldi	r23, 0xFF	; 255
     ef2:	c5 01       	movw	r24, r10
     ef4:	0e 94 9e 08 	call	0x113c	; 0x113c <strnlen_P>
     ef8:	4c 01       	movw	r8, r24
     efa:	f3 2d       	mov	r31, r3
     efc:	f0 68       	ori	r31, 0x80	; 128
     efe:	3f 2e       	mov	r3, r31
     f00:	82 01       	movw	r16, r4
     f02:	33 fc       	sbrc	r3, 3
     f04:	1b c0       	rjmp	.+54     	; 0xf3c <vfprintf+0x1c2>
     f06:	82 2d       	mov	r24, r2
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	88 16       	cp	r8, r24
     f0c:	99 06       	cpc	r9, r25
     f0e:	b0 f4       	brcc	.+44     	; 0xf3c <vfprintf+0x1c2>
     f10:	b6 01       	movw	r22, r12
     f12:	80 e2       	ldi	r24, 0x20	; 32
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
     f1a:	2a 94       	dec	r2
     f1c:	f4 cf       	rjmp	.-24     	; 0xf06 <vfprintf+0x18c>
     f1e:	f5 01       	movw	r30, r10
     f20:	37 fc       	sbrc	r3, 7
     f22:	85 91       	lpm	r24, Z+
     f24:	37 fe       	sbrs	r3, 7
     f26:	81 91       	ld	r24, Z+
     f28:	5f 01       	movw	r10, r30
     f2a:	b6 01       	movw	r22, r12
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
     f32:	21 10       	cpse	r2, r1
     f34:	2a 94       	dec	r2
     f36:	21 e0       	ldi	r18, 0x01	; 1
     f38:	82 1a       	sub	r8, r18
     f3a:	91 08       	sbc	r9, r1
     f3c:	81 14       	cp	r8, r1
     f3e:	91 04       	cpc	r9, r1
     f40:	71 f7       	brne	.-36     	; 0xf1e <vfprintf+0x1a4>
     f42:	e8 c0       	rjmp	.+464    	; 0x1114 <vfprintf+0x39a>
     f44:	84 36       	cpi	r24, 0x64	; 100
     f46:	11 f0       	breq	.+4      	; 0xf4c <vfprintf+0x1d2>
     f48:	89 36       	cpi	r24, 0x69	; 105
     f4a:	41 f5       	brne	.+80     	; 0xf9c <vfprintf+0x222>
     f4c:	f8 01       	movw	r30, r16
     f4e:	37 fe       	sbrs	r3, 7
     f50:	07 c0       	rjmp	.+14     	; 0xf60 <vfprintf+0x1e6>
     f52:	60 81       	ld	r22, Z
     f54:	71 81       	ldd	r23, Z+1	; 0x01
     f56:	82 81       	ldd	r24, Z+2	; 0x02
     f58:	93 81       	ldd	r25, Z+3	; 0x03
     f5a:	0c 5f       	subi	r16, 0xFC	; 252
     f5c:	1f 4f       	sbci	r17, 0xFF	; 255
     f5e:	08 c0       	rjmp	.+16     	; 0xf70 <vfprintf+0x1f6>
     f60:	60 81       	ld	r22, Z
     f62:	71 81       	ldd	r23, Z+1	; 0x01
     f64:	07 2e       	mov	r0, r23
     f66:	00 0c       	add	r0, r0
     f68:	88 0b       	sbc	r24, r24
     f6a:	99 0b       	sbc	r25, r25
     f6c:	0e 5f       	subi	r16, 0xFE	; 254
     f6e:	1f 4f       	sbci	r17, 0xFF	; 255
     f70:	f3 2d       	mov	r31, r3
     f72:	ff 76       	andi	r31, 0x6F	; 111
     f74:	3f 2e       	mov	r3, r31
     f76:	97 ff       	sbrs	r25, 7
     f78:	09 c0       	rjmp	.+18     	; 0xf8c <vfprintf+0x212>
     f7a:	90 95       	com	r25
     f7c:	80 95       	com	r24
     f7e:	70 95       	com	r23
     f80:	61 95       	neg	r22
     f82:	7f 4f       	sbci	r23, 0xFF	; 255
     f84:	8f 4f       	sbci	r24, 0xFF	; 255
     f86:	9f 4f       	sbci	r25, 0xFF	; 255
     f88:	f0 68       	ori	r31, 0x80	; 128
     f8a:	3f 2e       	mov	r3, r31
     f8c:	2a e0       	ldi	r18, 0x0A	; 10
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	a3 01       	movw	r20, r6
     f92:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__ultoa_invert>
     f96:	88 2e       	mov	r8, r24
     f98:	86 18       	sub	r8, r6
     f9a:	45 c0       	rjmp	.+138    	; 0x1026 <vfprintf+0x2ac>
     f9c:	85 37       	cpi	r24, 0x75	; 117
     f9e:	31 f4       	brne	.+12     	; 0xfac <vfprintf+0x232>
     fa0:	23 2d       	mov	r18, r3
     fa2:	2f 7e       	andi	r18, 0xEF	; 239
     fa4:	b2 2e       	mov	r11, r18
     fa6:	2a e0       	ldi	r18, 0x0A	; 10
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	25 c0       	rjmp	.+74     	; 0xff6 <vfprintf+0x27c>
     fac:	93 2d       	mov	r25, r3
     fae:	99 7f       	andi	r25, 0xF9	; 249
     fb0:	b9 2e       	mov	r11, r25
     fb2:	8f 36       	cpi	r24, 0x6F	; 111
     fb4:	c1 f0       	breq	.+48     	; 0xfe6 <vfprintf+0x26c>
     fb6:	18 f4       	brcc	.+6      	; 0xfbe <vfprintf+0x244>
     fb8:	88 35       	cpi	r24, 0x58	; 88
     fba:	79 f0       	breq	.+30     	; 0xfda <vfprintf+0x260>
     fbc:	b5 c0       	rjmp	.+362    	; 0x1128 <vfprintf+0x3ae>
     fbe:	80 37       	cpi	r24, 0x70	; 112
     fc0:	19 f0       	breq	.+6      	; 0xfc8 <vfprintf+0x24e>
     fc2:	88 37       	cpi	r24, 0x78	; 120
     fc4:	21 f0       	breq	.+8      	; 0xfce <vfprintf+0x254>
     fc6:	b0 c0       	rjmp	.+352    	; 0x1128 <vfprintf+0x3ae>
     fc8:	e9 2f       	mov	r30, r25
     fca:	e0 61       	ori	r30, 0x10	; 16
     fcc:	be 2e       	mov	r11, r30
     fce:	b4 fe       	sbrs	r11, 4
     fd0:	0d c0       	rjmp	.+26     	; 0xfec <vfprintf+0x272>
     fd2:	fb 2d       	mov	r31, r11
     fd4:	f4 60       	ori	r31, 0x04	; 4
     fd6:	bf 2e       	mov	r11, r31
     fd8:	09 c0       	rjmp	.+18     	; 0xfec <vfprintf+0x272>
     fda:	34 fe       	sbrs	r3, 4
     fdc:	0a c0       	rjmp	.+20     	; 0xff2 <vfprintf+0x278>
     fde:	29 2f       	mov	r18, r25
     fe0:	26 60       	ori	r18, 0x06	; 6
     fe2:	b2 2e       	mov	r11, r18
     fe4:	06 c0       	rjmp	.+12     	; 0xff2 <vfprintf+0x278>
     fe6:	28 e0       	ldi	r18, 0x08	; 8
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	05 c0       	rjmp	.+10     	; 0xff6 <vfprintf+0x27c>
     fec:	20 e1       	ldi	r18, 0x10	; 16
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <vfprintf+0x27c>
     ff2:	20 e1       	ldi	r18, 0x10	; 16
     ff4:	32 e0       	ldi	r19, 0x02	; 2
     ff6:	f8 01       	movw	r30, r16
     ff8:	b7 fe       	sbrs	r11, 7
     ffa:	07 c0       	rjmp	.+14     	; 0x100a <vfprintf+0x290>
     ffc:	60 81       	ld	r22, Z
     ffe:	71 81       	ldd	r23, Z+1	; 0x01
    1000:	82 81       	ldd	r24, Z+2	; 0x02
    1002:	93 81       	ldd	r25, Z+3	; 0x03
    1004:	0c 5f       	subi	r16, 0xFC	; 252
    1006:	1f 4f       	sbci	r17, 0xFF	; 255
    1008:	06 c0       	rjmp	.+12     	; 0x1016 <vfprintf+0x29c>
    100a:	60 81       	ld	r22, Z
    100c:	71 81       	ldd	r23, Z+1	; 0x01
    100e:	80 e0       	ldi	r24, 0x00	; 0
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	0e 5f       	subi	r16, 0xFE	; 254
    1014:	1f 4f       	sbci	r17, 0xFF	; 255
    1016:	a3 01       	movw	r20, r6
    1018:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__ultoa_invert>
    101c:	88 2e       	mov	r8, r24
    101e:	86 18       	sub	r8, r6
    1020:	fb 2d       	mov	r31, r11
    1022:	ff 77       	andi	r31, 0x7F	; 127
    1024:	3f 2e       	mov	r3, r31
    1026:	36 fe       	sbrs	r3, 6
    1028:	0d c0       	rjmp	.+26     	; 0x1044 <vfprintf+0x2ca>
    102a:	23 2d       	mov	r18, r3
    102c:	2e 7f       	andi	r18, 0xFE	; 254
    102e:	a2 2e       	mov	r10, r18
    1030:	89 14       	cp	r8, r9
    1032:	58 f4       	brcc	.+22     	; 0x104a <vfprintf+0x2d0>
    1034:	34 fe       	sbrs	r3, 4
    1036:	0b c0       	rjmp	.+22     	; 0x104e <vfprintf+0x2d4>
    1038:	32 fc       	sbrc	r3, 2
    103a:	09 c0       	rjmp	.+18     	; 0x104e <vfprintf+0x2d4>
    103c:	83 2d       	mov	r24, r3
    103e:	8e 7e       	andi	r24, 0xEE	; 238
    1040:	a8 2e       	mov	r10, r24
    1042:	05 c0       	rjmp	.+10     	; 0x104e <vfprintf+0x2d4>
    1044:	b8 2c       	mov	r11, r8
    1046:	a3 2c       	mov	r10, r3
    1048:	03 c0       	rjmp	.+6      	; 0x1050 <vfprintf+0x2d6>
    104a:	b8 2c       	mov	r11, r8
    104c:	01 c0       	rjmp	.+2      	; 0x1050 <vfprintf+0x2d6>
    104e:	b9 2c       	mov	r11, r9
    1050:	a4 fe       	sbrs	r10, 4
    1052:	0f c0       	rjmp	.+30     	; 0x1072 <vfprintf+0x2f8>
    1054:	fe 01       	movw	r30, r28
    1056:	e8 0d       	add	r30, r8
    1058:	f1 1d       	adc	r31, r1
    105a:	80 81       	ld	r24, Z
    105c:	80 33       	cpi	r24, 0x30	; 48
    105e:	21 f4       	brne	.+8      	; 0x1068 <vfprintf+0x2ee>
    1060:	9a 2d       	mov	r25, r10
    1062:	99 7e       	andi	r25, 0xE9	; 233
    1064:	a9 2e       	mov	r10, r25
    1066:	09 c0       	rjmp	.+18     	; 0x107a <vfprintf+0x300>
    1068:	a2 fe       	sbrs	r10, 2
    106a:	06 c0       	rjmp	.+12     	; 0x1078 <vfprintf+0x2fe>
    106c:	b3 94       	inc	r11
    106e:	b3 94       	inc	r11
    1070:	04 c0       	rjmp	.+8      	; 0x107a <vfprintf+0x300>
    1072:	8a 2d       	mov	r24, r10
    1074:	86 78       	andi	r24, 0x86	; 134
    1076:	09 f0       	breq	.+2      	; 0x107a <vfprintf+0x300>
    1078:	b3 94       	inc	r11
    107a:	a3 fc       	sbrc	r10, 3
    107c:	11 c0       	rjmp	.+34     	; 0x10a0 <vfprintf+0x326>
    107e:	a0 fe       	sbrs	r10, 0
    1080:	06 c0       	rjmp	.+12     	; 0x108e <vfprintf+0x314>
    1082:	b2 14       	cp	r11, r2
    1084:	88 f4       	brcc	.+34     	; 0x10a8 <vfprintf+0x32e>
    1086:	28 0c       	add	r2, r8
    1088:	92 2c       	mov	r9, r2
    108a:	9b 18       	sub	r9, r11
    108c:	0e c0       	rjmp	.+28     	; 0x10aa <vfprintf+0x330>
    108e:	b2 14       	cp	r11, r2
    1090:	60 f4       	brcc	.+24     	; 0x10aa <vfprintf+0x330>
    1092:	b6 01       	movw	r22, r12
    1094:	80 e2       	ldi	r24, 0x20	; 32
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
    109c:	b3 94       	inc	r11
    109e:	f7 cf       	rjmp	.-18     	; 0x108e <vfprintf+0x314>
    10a0:	b2 14       	cp	r11, r2
    10a2:	18 f4       	brcc	.+6      	; 0x10aa <vfprintf+0x330>
    10a4:	2b 18       	sub	r2, r11
    10a6:	02 c0       	rjmp	.+4      	; 0x10ac <vfprintf+0x332>
    10a8:	98 2c       	mov	r9, r8
    10aa:	21 2c       	mov	r2, r1
    10ac:	a4 fe       	sbrs	r10, 4
    10ae:	10 c0       	rjmp	.+32     	; 0x10d0 <vfprintf+0x356>
    10b0:	b6 01       	movw	r22, r12
    10b2:	80 e3       	ldi	r24, 0x30	; 48
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
    10ba:	a2 fe       	sbrs	r10, 2
    10bc:	17 c0       	rjmp	.+46     	; 0x10ec <vfprintf+0x372>
    10be:	a1 fc       	sbrc	r10, 1
    10c0:	03 c0       	rjmp	.+6      	; 0x10c8 <vfprintf+0x34e>
    10c2:	88 e7       	ldi	r24, 0x78	; 120
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <vfprintf+0x352>
    10c8:	88 e5       	ldi	r24, 0x58	; 88
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	b6 01       	movw	r22, r12
    10ce:	0c c0       	rjmp	.+24     	; 0x10e8 <vfprintf+0x36e>
    10d0:	8a 2d       	mov	r24, r10
    10d2:	86 78       	andi	r24, 0x86	; 134
    10d4:	59 f0       	breq	.+22     	; 0x10ec <vfprintf+0x372>
    10d6:	a1 fe       	sbrs	r10, 1
    10d8:	02 c0       	rjmp	.+4      	; 0x10de <vfprintf+0x364>
    10da:	8b e2       	ldi	r24, 0x2B	; 43
    10dc:	01 c0       	rjmp	.+2      	; 0x10e0 <vfprintf+0x366>
    10de:	80 e2       	ldi	r24, 0x20	; 32
    10e0:	a7 fc       	sbrc	r10, 7
    10e2:	8d e2       	ldi	r24, 0x2D	; 45
    10e4:	b6 01       	movw	r22, r12
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
    10ec:	89 14       	cp	r8, r9
    10ee:	38 f4       	brcc	.+14     	; 0x10fe <vfprintf+0x384>
    10f0:	b6 01       	movw	r22, r12
    10f2:	80 e3       	ldi	r24, 0x30	; 48
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
    10fa:	9a 94       	dec	r9
    10fc:	f7 cf       	rjmp	.-18     	; 0x10ec <vfprintf+0x372>
    10fe:	8a 94       	dec	r8
    1100:	f3 01       	movw	r30, r6
    1102:	e8 0d       	add	r30, r8
    1104:	f1 1d       	adc	r31, r1
    1106:	80 81       	ld	r24, Z
    1108:	b6 01       	movw	r22, r12
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
    1110:	81 10       	cpse	r8, r1
    1112:	f5 cf       	rjmp	.-22     	; 0x10fe <vfprintf+0x384>
    1114:	22 20       	and	r2, r2
    1116:	09 f4       	brne	.+2      	; 0x111a <vfprintf+0x3a0>
    1118:	42 ce       	rjmp	.-892    	; 0xd9e <vfprintf+0x24>
    111a:	b6 01       	movw	r22, r12
    111c:	80 e2       	ldi	r24, 0x20	; 32
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	0e 94 b4 08 	call	0x1168	; 0x1168 <fputc>
    1124:	2a 94       	dec	r2
    1126:	f6 cf       	rjmp	.-20     	; 0x1114 <vfprintf+0x39a>
    1128:	f6 01       	movw	r30, r12
    112a:	86 81       	ldd	r24, Z+6	; 0x06
    112c:	97 81       	ldd	r25, Z+7	; 0x07
    112e:	02 c0       	rjmp	.+4      	; 0x1134 <vfprintf+0x3ba>
    1130:	8f ef       	ldi	r24, 0xFF	; 255
    1132:	9f ef       	ldi	r25, 0xFF	; 255
    1134:	2b 96       	adiw	r28, 0x0b	; 11
    1136:	e2 e1       	ldi	r30, 0x12	; 18
    1138:	0c 94 6a 09 	jmp	0x12d4	; 0x12d4 <__epilogue_restores__>

0000113c <strnlen_P>:
    113c:	fc 01       	movw	r30, r24
    113e:	05 90       	lpm	r0, Z+
    1140:	61 50       	subi	r22, 0x01	; 1
    1142:	70 40       	sbci	r23, 0x00	; 0
    1144:	01 10       	cpse	r0, r1
    1146:	d8 f7       	brcc	.-10     	; 0x113e <strnlen_P+0x2>
    1148:	80 95       	com	r24
    114a:	90 95       	com	r25
    114c:	8e 0f       	add	r24, r30
    114e:	9f 1f       	adc	r25, r31
    1150:	08 95       	ret

00001152 <strnlen>:
    1152:	fc 01       	movw	r30, r24
    1154:	61 50       	subi	r22, 0x01	; 1
    1156:	70 40       	sbci	r23, 0x00	; 0
    1158:	01 90       	ld	r0, Z+
    115a:	01 10       	cpse	r0, r1
    115c:	d8 f7       	brcc	.-10     	; 0x1154 <strnlen+0x2>
    115e:	80 95       	com	r24
    1160:	90 95       	com	r25
    1162:	8e 0f       	add	r24, r30
    1164:	9f 1f       	adc	r25, r31
    1166:	08 95       	ret

00001168 <fputc>:
    1168:	0f 93       	push	r16
    116a:	1f 93       	push	r17
    116c:	cf 93       	push	r28
    116e:	df 93       	push	r29
    1170:	fb 01       	movw	r30, r22
    1172:	23 81       	ldd	r18, Z+3	; 0x03
    1174:	21 fd       	sbrc	r18, 1
    1176:	03 c0       	rjmp	.+6      	; 0x117e <fputc+0x16>
    1178:	8f ef       	ldi	r24, 0xFF	; 255
    117a:	9f ef       	ldi	r25, 0xFF	; 255
    117c:	2c c0       	rjmp	.+88     	; 0x11d6 <fputc+0x6e>
    117e:	22 ff       	sbrs	r18, 2
    1180:	16 c0       	rjmp	.+44     	; 0x11ae <fputc+0x46>
    1182:	46 81       	ldd	r20, Z+6	; 0x06
    1184:	57 81       	ldd	r21, Z+7	; 0x07
    1186:	24 81       	ldd	r18, Z+4	; 0x04
    1188:	35 81       	ldd	r19, Z+5	; 0x05
    118a:	42 17       	cp	r20, r18
    118c:	53 07       	cpc	r21, r19
    118e:	44 f4       	brge	.+16     	; 0x11a0 <fputc+0x38>
    1190:	a0 81       	ld	r26, Z
    1192:	b1 81       	ldd	r27, Z+1	; 0x01
    1194:	9d 01       	movw	r18, r26
    1196:	2f 5f       	subi	r18, 0xFF	; 255
    1198:	3f 4f       	sbci	r19, 0xFF	; 255
    119a:	31 83       	std	Z+1, r19	; 0x01
    119c:	20 83       	st	Z, r18
    119e:	8c 93       	st	X, r24
    11a0:	26 81       	ldd	r18, Z+6	; 0x06
    11a2:	37 81       	ldd	r19, Z+7	; 0x07
    11a4:	2f 5f       	subi	r18, 0xFF	; 255
    11a6:	3f 4f       	sbci	r19, 0xFF	; 255
    11a8:	37 83       	std	Z+7, r19	; 0x07
    11aa:	26 83       	std	Z+6, r18	; 0x06
    11ac:	14 c0       	rjmp	.+40     	; 0x11d6 <fputc+0x6e>
    11ae:	8b 01       	movw	r16, r22
    11b0:	ec 01       	movw	r28, r24
    11b2:	fb 01       	movw	r30, r22
    11b4:	00 84       	ldd	r0, Z+8	; 0x08
    11b6:	f1 85       	ldd	r31, Z+9	; 0x09
    11b8:	e0 2d       	mov	r30, r0
    11ba:	09 95       	icall
    11bc:	89 2b       	or	r24, r25
    11be:	e1 f6       	brne	.-72     	; 0x1178 <fputc+0x10>
    11c0:	d8 01       	movw	r26, r16
    11c2:	16 96       	adiw	r26, 0x06	; 6
    11c4:	8d 91       	ld	r24, X+
    11c6:	9c 91       	ld	r25, X
    11c8:	17 97       	sbiw	r26, 0x07	; 7
    11ca:	01 96       	adiw	r24, 0x01	; 1
    11cc:	17 96       	adiw	r26, 0x07	; 7
    11ce:	9c 93       	st	X, r25
    11d0:	8e 93       	st	-X, r24
    11d2:	16 97       	sbiw	r26, 0x06	; 6
    11d4:	ce 01       	movw	r24, r28
    11d6:	df 91       	pop	r29
    11d8:	cf 91       	pop	r28
    11da:	1f 91       	pop	r17
    11dc:	0f 91       	pop	r16
    11de:	08 95       	ret

000011e0 <__ultoa_invert>:
    11e0:	fa 01       	movw	r30, r20
    11e2:	aa 27       	eor	r26, r26
    11e4:	28 30       	cpi	r18, 0x08	; 8
    11e6:	51 f1       	breq	.+84     	; 0x123c <__ultoa_invert+0x5c>
    11e8:	20 31       	cpi	r18, 0x10	; 16
    11ea:	81 f1       	breq	.+96     	; 0x124c <__ultoa_invert+0x6c>
    11ec:	e8 94       	clt
    11ee:	6f 93       	push	r22
    11f0:	6e 7f       	andi	r22, 0xFE	; 254
    11f2:	6e 5f       	subi	r22, 0xFE	; 254
    11f4:	7f 4f       	sbci	r23, 0xFF	; 255
    11f6:	8f 4f       	sbci	r24, 0xFF	; 255
    11f8:	9f 4f       	sbci	r25, 0xFF	; 255
    11fa:	af 4f       	sbci	r26, 0xFF	; 255
    11fc:	b1 e0       	ldi	r27, 0x01	; 1
    11fe:	3e d0       	rcall	.+124    	; 0x127c <__ultoa_invert+0x9c>
    1200:	b4 e0       	ldi	r27, 0x04	; 4
    1202:	3c d0       	rcall	.+120    	; 0x127c <__ultoa_invert+0x9c>
    1204:	67 0f       	add	r22, r23
    1206:	78 1f       	adc	r23, r24
    1208:	89 1f       	adc	r24, r25
    120a:	9a 1f       	adc	r25, r26
    120c:	a1 1d       	adc	r26, r1
    120e:	68 0f       	add	r22, r24
    1210:	79 1f       	adc	r23, r25
    1212:	8a 1f       	adc	r24, r26
    1214:	91 1d       	adc	r25, r1
    1216:	a1 1d       	adc	r26, r1
    1218:	6a 0f       	add	r22, r26
    121a:	71 1d       	adc	r23, r1
    121c:	81 1d       	adc	r24, r1
    121e:	91 1d       	adc	r25, r1
    1220:	a1 1d       	adc	r26, r1
    1222:	20 d0       	rcall	.+64     	; 0x1264 <__ultoa_invert+0x84>
    1224:	09 f4       	brne	.+2      	; 0x1228 <__ultoa_invert+0x48>
    1226:	68 94       	set
    1228:	3f 91       	pop	r19
    122a:	2a e0       	ldi	r18, 0x0A	; 10
    122c:	26 9f       	mul	r18, r22
    122e:	11 24       	eor	r1, r1
    1230:	30 19       	sub	r19, r0
    1232:	30 5d       	subi	r19, 0xD0	; 208
    1234:	31 93       	st	Z+, r19
    1236:	de f6       	brtc	.-74     	; 0x11ee <__ultoa_invert+0xe>
    1238:	cf 01       	movw	r24, r30
    123a:	08 95       	ret
    123c:	46 2f       	mov	r20, r22
    123e:	47 70       	andi	r20, 0x07	; 7
    1240:	40 5d       	subi	r20, 0xD0	; 208
    1242:	41 93       	st	Z+, r20
    1244:	b3 e0       	ldi	r27, 0x03	; 3
    1246:	0f d0       	rcall	.+30     	; 0x1266 <__ultoa_invert+0x86>
    1248:	c9 f7       	brne	.-14     	; 0x123c <__ultoa_invert+0x5c>
    124a:	f6 cf       	rjmp	.-20     	; 0x1238 <__ultoa_invert+0x58>
    124c:	46 2f       	mov	r20, r22
    124e:	4f 70       	andi	r20, 0x0F	; 15
    1250:	40 5d       	subi	r20, 0xD0	; 208
    1252:	4a 33       	cpi	r20, 0x3A	; 58
    1254:	18 f0       	brcs	.+6      	; 0x125c <__ultoa_invert+0x7c>
    1256:	49 5d       	subi	r20, 0xD9	; 217
    1258:	31 fd       	sbrc	r19, 1
    125a:	40 52       	subi	r20, 0x20	; 32
    125c:	41 93       	st	Z+, r20
    125e:	02 d0       	rcall	.+4      	; 0x1264 <__ultoa_invert+0x84>
    1260:	a9 f7       	brne	.-22     	; 0x124c <__ultoa_invert+0x6c>
    1262:	ea cf       	rjmp	.-44     	; 0x1238 <__ultoa_invert+0x58>
    1264:	b4 e0       	ldi	r27, 0x04	; 4
    1266:	a6 95       	lsr	r26
    1268:	97 95       	ror	r25
    126a:	87 95       	ror	r24
    126c:	77 95       	ror	r23
    126e:	67 95       	ror	r22
    1270:	ba 95       	dec	r27
    1272:	c9 f7       	brne	.-14     	; 0x1266 <__ultoa_invert+0x86>
    1274:	00 97       	sbiw	r24, 0x00	; 0
    1276:	61 05       	cpc	r22, r1
    1278:	71 05       	cpc	r23, r1
    127a:	08 95       	ret
    127c:	9b 01       	movw	r18, r22
    127e:	ac 01       	movw	r20, r24
    1280:	0a 2e       	mov	r0, r26
    1282:	06 94       	lsr	r0
    1284:	57 95       	ror	r21
    1286:	47 95       	ror	r20
    1288:	37 95       	ror	r19
    128a:	27 95       	ror	r18
    128c:	ba 95       	dec	r27
    128e:	c9 f7       	brne	.-14     	; 0x1282 <__ultoa_invert+0xa2>
    1290:	62 0f       	add	r22, r18
    1292:	73 1f       	adc	r23, r19
    1294:	84 1f       	adc	r24, r20
    1296:	95 1f       	adc	r25, r21
    1298:	a0 1d       	adc	r26, r0
    129a:	08 95       	ret

0000129c <__prologue_saves__>:
    129c:	2f 92       	push	r2
    129e:	3f 92       	push	r3
    12a0:	4f 92       	push	r4
    12a2:	5f 92       	push	r5
    12a4:	6f 92       	push	r6
    12a6:	7f 92       	push	r7
    12a8:	8f 92       	push	r8
    12aa:	9f 92       	push	r9
    12ac:	af 92       	push	r10
    12ae:	bf 92       	push	r11
    12b0:	cf 92       	push	r12
    12b2:	df 92       	push	r13
    12b4:	ef 92       	push	r14
    12b6:	ff 92       	push	r15
    12b8:	0f 93       	push	r16
    12ba:	1f 93       	push	r17
    12bc:	cf 93       	push	r28
    12be:	df 93       	push	r29
    12c0:	cd b7       	in	r28, 0x3d	; 61
    12c2:	de b7       	in	r29, 0x3e	; 62
    12c4:	ca 1b       	sub	r28, r26
    12c6:	db 0b       	sbc	r29, r27
    12c8:	0f b6       	in	r0, 0x3f	; 63
    12ca:	f8 94       	cli
    12cc:	de bf       	out	0x3e, r29	; 62
    12ce:	0f be       	out	0x3f, r0	; 63
    12d0:	cd bf       	out	0x3d, r28	; 61
    12d2:	09 94       	ijmp

000012d4 <__epilogue_restores__>:
    12d4:	2a 88       	ldd	r2, Y+18	; 0x12
    12d6:	39 88       	ldd	r3, Y+17	; 0x11
    12d8:	48 88       	ldd	r4, Y+16	; 0x10
    12da:	5f 84       	ldd	r5, Y+15	; 0x0f
    12dc:	6e 84       	ldd	r6, Y+14	; 0x0e
    12de:	7d 84       	ldd	r7, Y+13	; 0x0d
    12e0:	8c 84       	ldd	r8, Y+12	; 0x0c
    12e2:	9b 84       	ldd	r9, Y+11	; 0x0b
    12e4:	aa 84       	ldd	r10, Y+10	; 0x0a
    12e6:	b9 84       	ldd	r11, Y+9	; 0x09
    12e8:	c8 84       	ldd	r12, Y+8	; 0x08
    12ea:	df 80       	ldd	r13, Y+7	; 0x07
    12ec:	ee 80       	ldd	r14, Y+6	; 0x06
    12ee:	fd 80       	ldd	r15, Y+5	; 0x05
    12f0:	0c 81       	ldd	r16, Y+4	; 0x04
    12f2:	1b 81       	ldd	r17, Y+3	; 0x03
    12f4:	aa 81       	ldd	r26, Y+2	; 0x02
    12f6:	b9 81       	ldd	r27, Y+1	; 0x01
    12f8:	ce 0f       	add	r28, r30
    12fa:	d1 1d       	adc	r29, r1
    12fc:	0f b6       	in	r0, 0x3f	; 63
    12fe:	f8 94       	cli
    1300:	de bf       	out	0x3e, r29	; 62
    1302:	0f be       	out	0x3f, r0	; 63
    1304:	cd bf       	out	0x3d, r28	; 61
    1306:	ed 01       	movw	r28, r26
    1308:	08 95       	ret

0000130a <_exit>:
    130a:	f8 94       	cli

0000130c <__stop_program>:
    130c:	ff cf       	rjmp	.-2      	; 0x130c <__stop_program>
